{"version":3,"sources":["./node_modules/heap-js/dist/heap-js.es5.js","./src/app/exercise/exercise-routing.module.ts","./src/app/exercise/exercise.module.ts","./src/app/exercise/exercise.page/components/answer-indication/answer-indication.component.ts","./src/app/exercise/exercise.page/components/exercise-help/exercise-explanation/exercise-explanation-content.directive.ts","./src/app/exercise/exercise.page/components/exercise-help/exercise-explanation/exercise-explanation.page.ts","./src/app/exercise/exercise.page/components/exercise-settings.page/components/included-answers/list-select.component.ts","./src/app/exercise/exercise.page/components/exercise-settings.page/exercise-settings.page.ts","./src/app/exercise/exercise.page/exercise.page.ts","./src/app/exercise/services/exercise-explanation.service.ts","./src/app/exercise/services/exercise-state/adaptive-exercise.ts","./src/app/exercise/services/exercise-state/exercise-state.service.ts","./src/app/services/exercise-settings-data.service.ts","./src/app/shared/ng-utilities/console-log-component/console-log-component.module.ts","./src/app/shared/ng-utilities/console-log-component/console-log.component.ts","./src/app/shared/ng-utilities/pure-function-pipe/pure-function.pipe.ts","./src/app/shared/reactive-forms/ControlValueAccessor.ts","./src/app/shared/reactive-forms/control-methods.ts","./src/app/shared/reactive-forms/formArray.ts","./src/app/shared/reactive-forms/formControl.ts","./src/app/shared/reactive-forms/formGroup.ts","./src/app/shared/reactive-forms/index.ts","./src/app/exercise/exercise.page/components/answer-indication/answer-indication.component.scss","./src/app/exercise/exercise.page/components/exercise-help/exercise-explanation/exercise-explanation.page.scss","./src/app/exercise/exercise.page/components/exercise-settings.page/components/included-answers/list-select.component.scss","./src/app/exercise/exercise.page/components/exercise-settings.page/exercise-settings.page.scss","./src/app/exercise/exercise.page/exercise.page.scss","./src/app/exercise/exercise.page/components/answer-indication/answer-indication.component.html","./src/app/exercise/exercise.page/components/exercise-help/exercise-explanation/exercise-explanation.page.html","./src/app/exercise/exercise.page/components/exercise-settings.page/components/included-answers/list-select.component.html","./src/app/exercise/exercise.page/components/exercise-settings.page/exercise-settings.page.html","./src/app/exercise/exercise.page/exercise.page.html"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA;AACA,aAAa,6BAA6B,0BAA0B,aAAa,EAAE,qBAAqB;AACxG,gBAAgB,qDAAqD,oEAAoE,aAAa,EAAE;AACxJ,sBAAsB,sBAAsB,qBAAqB,GAAG;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,kCAAkC,SAAS;AAC3C,kCAAkC,WAAW,UAAU;AACvD,yCAAyC,cAAc;AACvD;AACA,6GAA6G,OAAO,UAAU;AAC9H,gFAAgF,iBAAiB,OAAO;AACxG,wDAAwD,gBAAgB,QAAQ,OAAO;AACvF,8CAA8C,gBAAgB,gBAAgB,OAAO;AACrF;AACA,iCAAiC;AACjC;AACA;AACA,SAAS,YAAY,aAAa,OAAO,EAAE,UAAU,WAAW;AAChE,mCAAmC,SAAS;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,MAAM,gBAAgB;AACzC;AACA;AACA;AACA;AACA,iBAAiB,sBAAsB;AACvC;AACA;AACA;AACA;AACA,oDAAoD,QAAQ;AAC5D;AACA;AACA;AACA,0BAA0B,YAAY;AACtC;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,gBAAgB,SAAS;AACzB;AACA;AACA;AACA,iCAAiC,8BAA8B;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,cAAc;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,mBAAmB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,mBAAmB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,IAAI;AACpB,gBAAgB,IAAI;AACpB,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,IAAI;AACpB,gBAAgB,IAAI;AACpB,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,OAAO;AACvB,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,OAAO;AACvB,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,IAAI;AACpB,gBAAgB,IAAI;AACpB,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,KAAK;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,WAAW;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,MAAM;AACtB,gBAAgB,SAAS;AACzB,gBAAgB,KAAK;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,MAAM;AACtB,gBAAgB,SAAS;AACzB,gBAAgB,IAAI;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,MAAM;AACtB,gBAAgB,IAAI;AACpB,gBAAgB,SAAS;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,MAAM;AACtB,gBAAgB,IAAI;AACpB,gBAAgB,SAAS;AACzB,gBAAgB,IAAI;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,MAAM;AACtB,gBAAgB,IAAI;AACpB,gBAAgB,SAAS;AACzB,gBAAgB,IAAI;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,MAAM;AACtB,gBAAgB,OAAO;AACvB,gBAAgB,SAAS;AACzB,gBAAgB,IAAI;AACpB;AACA;AACA,2BAA2B,OAAO;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,MAAM;AACtB,gBAAgB,OAAO;AACvB,gBAAgB,SAAS;AACzB,gBAAgB,IAAI;AACpB;AACA;AACA,2BAA2B,OAAO;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,SAAS;AACzB,gBAAgB,SAAS;AACzB,gBAAgB,IAAI;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,SAAS;AACzB,gBAAgB,SAAS;AACzB,gBAAgB,IAAI;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,IAAI;AACnB,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA;AACA,iCAAiC,OAAO;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,MAAM;AACtB;AACA;AACA,2BAA2B,OAAO;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,oBAAoB;AACpC;AACA;AACA;AACA,qDAAqD,qDAAqD,kCAAkC,EAAE,EAAE,EAAE;AAClJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,IAAI;AACpB,gBAAgB,SAAS;AACzB,gBAAgB;AAChB;AACA;AACA,4BAA4B,0BAA0B;AACtD,uDAAuD,kBAAkB,EAAE;AAC3E;AACA;AACA;AACA,gBAAgB,MAAM;AACtB;AACA;AACA;AACA;AACA;AACA,uDAAuD,QAAQ;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,gBAAgB,IAAI;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,IAAI;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,IAAI;AACpB,gBAAgB,IAAI;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,IAAI;AACpB,gBAAgB,SAAS;AACzB,gBAAgB,QAAQ;AACxB;AACA;AACA,4BAA4B,0BAA0B;AACtD;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE,kBAAkB,EAAE;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,IAAI;AACpB,gBAAgB,IAAI;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,MAAM;AACtB;AACA;AACA,2BAA2B,OAAO;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,IAAI;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,WAAW;AAC3B;AACA;AACA;AACA;AACA,+BAA+B,2BAA2B,EAAE;AAC5D,kCAAkC,wBAAwB,EAAE;AAC5D;AACA;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,IAAI;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,MAAM;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,mBAAmB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,MAAM;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,MAAM;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,OAAO;AACnC,iHAAiH,6BAA6B,EAAE;AAChJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,MAAM;AACtB;AACA;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED,iEAAe,IAAI,EAAC;AACG;;;;;;;;;;;;;;;;;;;;;ACr4BkB;AACc;AACM;AAE7D,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,sEAAY;KACxB;CACF,CAAC;IAMW,qBAAqB,SAArB,qBAAqB;CAAG;AAAxB,qBAAqB;IAJjC,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,yDAAY,CAAC;KACxB,CAAC;GACW,qBAAqB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfO;AACM;AACc;AACK;AACrB;AACmE;AAC3D;AACgE;AACqB;AACjC;AACyB;AACyB;AACpF;AACZ;AACqC;AACsB;IAuBzG,cAAc,SAAd,cAAc;CAC1B;AADY,cAAc;IArB1B,wDAAQ,CAAC;QACR,YAAY,EAAE;YACZ,sEAAY;YACZ,yHAAoB;YACpB,2IAAuB;YACvB,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","file":"src_app_exercise_exercise_module_ts.js","sourcesContent":["var __generator = (undefined && undefined.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __read = (undefined && undefined.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (undefined && undefined.__spreadArray) || function (to, from) {\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\n        to[j] = from[i];\n    return to;\n};\nvar toInt = function (n) { return ~~n; };\n/**\n * Heap\n * @type {Class}\n */\nvar Heap = /** @class */ (function () {\n    /**\n     * Heap instance constructor.\n     * @param  {Function} compare Optional comparison function, defaults to Heap.minComparator<number>\n     */\n    function Heap(compare) {\n        var _this = this;\n        if (compare === void 0) { compare = Heap.minComparator; }\n        this.compare = compare;\n        this.heapArray = [];\n        this._limit = 0;\n        /**\n         * Alias of add\n         */\n        this.offer = this.add;\n        /**\n         * Alias of peek\n         */\n        this.element = this.peek;\n        /**\n         * Alias of pop\n         */\n        this.poll = this.pop;\n        /**\n         * Returns the inverse to the comparison function.\n         * @return {Function}\n         */\n        this._invertedCompare = function (a, b) {\n            return -1 * _this.compare(a, b);\n        };\n    }\n    /*\n              Static methods\n     */\n    /**\n     * Gets children indices for given index.\n     * @param  {Number} idx     Parent index\n     * @return {Array(Number)}  Array of children indices\n     */\n    Heap.getChildrenIndexOf = function (idx) {\n        return [idx * 2 + 1, idx * 2 + 2];\n    };\n    /**\n     * Gets parent index for given index.\n     * @param  {Number} idx  Children index\n     * @return {Number | undefined}      Parent index, -1 if idx is 0\n     */\n    Heap.getParentIndexOf = function (idx) {\n        if (idx <= 0) {\n            return -1;\n        }\n        var whichChildren = idx % 2 ? 1 : 2;\n        return Math.floor((idx - whichChildren) / 2);\n    };\n    /**\n     * Gets sibling index for given index.\n     * @param  {Number} idx  Children index\n     * @return {Number | undefined}      Sibling index, -1 if idx is 0\n     */\n    Heap.getSiblingIndexOf = function (idx) {\n        if (idx <= 0) {\n            return -1;\n        }\n        var whichChildren = idx % 2 ? 1 : -1;\n        return idx + whichChildren;\n    };\n    /**\n     * Min heap comparison function, default.\n     * @param  {any} a     First element\n     * @param  {any} b     Second element\n     * @return {Number}    0 if they're equal, positive if `a` goes up, negative if `b` goes up\n     */\n    Heap.minComparator = function (a, b) {\n        if (a > b) {\n            return 1;\n        }\n        else if (a < b) {\n            return -1;\n        }\n        else {\n            return 0;\n        }\n    };\n    /**\n     * Max heap comparison function.\n     * @param  {any} a     First element\n     * @param  {any} b     Second element\n     * @return {Number}    0 if they're equal, positive if `a` goes up, negative if `b` goes up\n     */\n    Heap.maxComparator = function (a, b) {\n        if (b > a) {\n            return 1;\n        }\n        else if (b < a) {\n            return -1;\n        }\n        else {\n            return 0;\n        }\n    };\n    /**\n     * Min number heap comparison function, default.\n     * @param  {Number} a     First element\n     * @param  {Number} b     Second element\n     * @return {Number}    0 if they're equal, positive if `a` goes up, negative if `b` goes up\n     */\n    Heap.minComparatorNumber = function (a, b) {\n        return a - b;\n    };\n    /**\n     * Max number heap comparison function.\n     * @param  {Number} a     First element\n     * @param  {Number} b     Second element\n     * @return {Number}    0 if they're equal, positive if `a` goes up, negative if `b` goes up\n     */\n    Heap.maxComparatorNumber = function (a, b) {\n        return b - a;\n    };\n    /**\n     * Default equality function.\n     * @param  {any} a    First element\n     * @param  {any} b    Second element\n     * @return {Boolean}  True if equal, false otherwise\n     */\n    Heap.defaultIsEqual = function (a, b) {\n        return a === b;\n    };\n    /**\n     * Prints a heap.\n     * @param  {Heap} heap Heap to be printed\n     * @returns {String}\n     */\n    Heap.print = function (heap) {\n        function deep(i) {\n            var pi = Heap.getParentIndexOf(i);\n            return Math.floor(Math.log2(pi + 1));\n        }\n        function repeat(str, times) {\n            var out = '';\n            for (; times > 0; --times) {\n                out += str;\n            }\n            return out;\n        }\n        var node = 0;\n        var lines = [];\n        var maxLines = deep(heap.length - 1) + 2;\n        var maxLength = 0;\n        while (node < heap.length) {\n            var i = deep(node) + 1;\n            if (node === 0) {\n                i = 0;\n            }\n            // Text representation\n            var nodeText = String(heap.get(node));\n            if (nodeText.length > maxLength) {\n                maxLength = nodeText.length;\n            }\n            // Add to line\n            lines[i] = lines[i] || [];\n            lines[i].push(nodeText);\n            node += 1;\n        }\n        return lines\n            .map(function (line, i) {\n            var times = Math.pow(2, maxLines - i) - 1;\n            return (repeat(' ', Math.floor(times / 2) * maxLength) +\n                line\n                    .map(function (el) {\n                    // centered\n                    var half = (maxLength - el.length) / 2;\n                    return repeat(' ', Math.ceil(half)) + el + repeat(' ', Math.floor(half));\n                })\n                    .join(repeat(' ', times * maxLength)));\n        })\n            .join('\\n');\n    };\n    /*\n              Python style\n     */\n    /**\n     * Converts an array into an array-heap, in place\n     * @param  {Array}    arr      Array to be modified\n     * @param  {Function} compare  Optional compare function\n     * @return {Heap}              For convenience, it returns a Heap instance\n     */\n    Heap.heapify = function (arr, compare) {\n        var heap = new Heap(compare);\n        heap.heapArray = arr;\n        heap.init();\n        return heap;\n    };\n    /**\n     * Extract the peek of an array-heap\n     * @param  {Array}    heapArr  Array to be modified, should be a heap\n     * @param  {Function} compare  Optional compare function\n     * @return {any}               Returns the extracted peek\n     */\n    Heap.heappop = function (heapArr, compare) {\n        var heap = new Heap(compare);\n        heap.heapArray = heapArr;\n        return heap.pop();\n    };\n    /**\n     * Pushes a item into an array-heap\n     * @param  {Array}    heapArr  Array to be modified, should be a heap\n     * @param  {any}      item     Item to push\n     * @param  {Function} compare  Optional compare function\n     */\n    Heap.heappush = function (heapArr, item, compare) {\n        var heap = new Heap(compare);\n        heap.heapArray = heapArr;\n        heap.push(item);\n    };\n    /**\n     * Push followed by pop, faster\n     * @param  {Array}    heapArr  Array to be modified, should be a heap\n     * @param  {any}      item     Item to push\n     * @param  {Function} compare  Optional compare function\n     * @return {any}               Returns the extracted peek\n     */\n    Heap.heappushpop = function (heapArr, item, compare) {\n        var heap = new Heap(compare);\n        heap.heapArray = heapArr;\n        return heap.pushpop(item);\n    };\n    /**\n     * Replace peek with item\n     * @param  {Array}    heapArr  Array to be modified, should be a heap\n     * @param  {any}      item     Item as replacement\n     * @param  {Function} compare  Optional compare function\n     * @return {any}               Returns the extracted peek\n     */\n    Heap.heapreplace = function (heapArr, item, compare) {\n        var heap = new Heap(compare);\n        heap.heapArray = heapArr;\n        return heap.replace(item);\n    };\n    /**\n     * Return the `n` most valuable elements of a heap-like Array\n     * @param  {Array}    heapArr  Array, should be an array-heap\n     * @param  {number}   n        Max number of elements\n     * @param  {Function} compare  Optional compare function\n     * @return {any}               Elements\n     */\n    Heap.heaptop = function (heapArr, n, compare) {\n        if (n === void 0) { n = 1; }\n        var heap = new Heap(compare);\n        heap.heapArray = heapArr;\n        return heap.top(n);\n    };\n    /**\n     * Return the `n` least valuable elements of a heap-like Array\n     * @param  {Array}    heapArr  Array, should be an array-heap\n     * @param  {number}   n        Max number of elements\n     * @param  {Function} compare  Optional compare function\n     * @return {any}               Elements\n     */\n    Heap.heapbottom = function (heapArr, n, compare) {\n        if (n === void 0) { n = 1; }\n        var heap = new Heap(compare);\n        heap.heapArray = heapArr;\n        return heap.bottom(n);\n    };\n    /**\n     * Return the `n` most valuable elements of an iterable\n     * @param  {number}   n        Max number of elements\n     * @param  {Iterable} Iterable Iterable list of elements\n     * @param  {Function} compare  Optional compare function\n     * @return {any}               Elements\n     */\n    Heap.nlargest = function (n, iterable, compare) {\n        var heap = new Heap(compare);\n        heap.heapArray = __spreadArray([], __read(iterable));\n        heap.init();\n        return heap.top(n);\n    };\n    /**\n     * Return the `n` least valuable elements of an iterable\n     * @param  {number}   n        Max number of elements\n     * @param  {Iterable} Iterable Iterable list of elements\n     * @param  {Function} compare  Optional compare function\n     * @return {any}               Elements\n     */\n    Heap.nsmallest = function (n, iterable, compare) {\n        var heap = new Heap(compare);\n        heap.heapArray = __spreadArray([], __read(iterable));\n        heap.init();\n        return heap.bottom(n);\n    };\n    /*\n              Instance methods\n     */\n    /**\n     * Adds an element to the heap. Aliases: `offer`.\n     * Same as: push(element)\n     * @param {any} element Element to be added\n     * @return {Boolean} true\n     */\n    Heap.prototype.add = function (element) {\n        this._sortNodeUp(this.heapArray.push(element) - 1);\n        this._applyLimit();\n        return true;\n    };\n    /**\n     * Adds an array of elements to the heap.\n     * Similar as: push(element, element, ...).\n     * @param {Array} elements Elements to be added\n     * @return {Boolean} true\n     */\n    Heap.prototype.addAll = function (elements) {\n        var _a;\n        var i = this.length;\n        (_a = this.heapArray).push.apply(_a, __spreadArray([], __read(elements)));\n        for (var l = this.length; i < l; ++i) {\n            this._sortNodeUp(i);\n        }\n        this._applyLimit();\n        return true;\n    };\n    /**\n     * Return the bottom (lowest value) N elements of the heap.\n     *\n     * @param  {Number} n  Number of elements.\n     * @return {Array}     Array of length <= N.\n     */\n    Heap.prototype.bottom = function (n) {\n        if (n === void 0) { n = 1; }\n        if (this.heapArray.length === 0 || n <= 0) {\n            // Nothing to do\n            return [];\n        }\n        else if (this.heapArray.length === 1) {\n            // Just the peek\n            return [this.heapArray[0]];\n        }\n        else if (n >= this.heapArray.length) {\n            // The whole heap\n            return __spreadArray([], __read(this.heapArray));\n        }\n        else {\n            // Some elements\n            var result = this._bottomN_push(~~n);\n            return result;\n        }\n    };\n    /**\n     * Check if the heap is sorted, useful for testing purposes.\n     * @return {Undefined | Element}  Returns an element if something wrong is found, otherwise it's undefined\n     */\n    Heap.prototype.check = function () {\n        var _this = this;\n        return this.heapArray.find(function (el, j) { return !!_this.getChildrenOf(j).find(function (ch) { return _this.compare(el, ch) > 0; }); });\n    };\n    /**\n     * Remove all of the elements from this heap.\n     */\n    Heap.prototype.clear = function () {\n        this.heapArray = [];\n    };\n    /**\n     * Clone this heap\n     * @return {Heap}\n     */\n    Heap.prototype.clone = function () {\n        var cloned = new Heap(this.comparator());\n        cloned.heapArray = this.toArray();\n        cloned._limit = this._limit;\n        return cloned;\n    };\n    /**\n     * Returns the comparison function.\n     * @return {Function}\n     */\n    Heap.prototype.comparator = function () {\n        return this.compare;\n    };\n    /**\n     * Returns true if this queue contains the specified element.\n     * @param  {any}      o   Element to be found\n     * @param  {Function} fn  Optional comparison function, receives (element, needle)\n     * @return {Boolean}\n     */\n    Heap.prototype.contains = function (o, fn) {\n        if (fn === void 0) { fn = Heap.defaultIsEqual; }\n        return this.heapArray.findIndex(function (el) { return fn(el, o); }) >= 0;\n    };\n    /**\n     * Initialise a heap, sorting nodes\n     * @param  {Array} array Optional initial state array\n     */\n    Heap.prototype.init = function (array) {\n        if (array) {\n            this.heapArray = __spreadArray([], __read(array));\n        }\n        for (var i = Math.floor(this.heapArray.length); i >= 0; --i) {\n            this._sortNodeDown(i);\n        }\n        this._applyLimit();\n    };\n    /**\n     * Test if the heap has no elements.\n     * @return {Boolean} True if no elements on the heap\n     */\n    Heap.prototype.isEmpty = function () {\n        return this.length === 0;\n    };\n    /**\n     * Get the leafs of the tree (no children nodes)\n     */\n    Heap.prototype.leafs = function () {\n        if (this.heapArray.length === 0) {\n            return [];\n        }\n        var pi = Heap.getParentIndexOf(this.heapArray.length - 1);\n        return this.heapArray.slice(pi + 1);\n    };\n    Object.defineProperty(Heap.prototype, \"length\", {\n        /**\n         * Length of the heap.\n         * @return {Number}\n         */\n        get: function () {\n            return this.heapArray.length;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Heap.prototype, \"limit\", {\n        /**\n         * Get length limit of the heap.\n         * @return {Number}\n         */\n        get: function () {\n            return this._limit;\n        },\n        /**\n         * Set length limit of the heap.\n         * @return {Number}\n         */\n        set: function (_l) {\n            this._limit = ~~_l;\n            this._applyLimit();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Top node. Aliases: `element`.\n     * Same as: `top(1)[0]`\n     * @return {any} Top node\n     */\n    Heap.prototype.peek = function () {\n        return this.heapArray[0];\n    };\n    /**\n     * Extract the top node (root). Aliases: `poll`.\n     * @return {any} Extracted top node, undefined if empty\n     */\n    Heap.prototype.pop = function () {\n        var last = this.heapArray.pop();\n        if (this.length > 0 && last !== undefined) {\n            return this.replace(last);\n        }\n        return last;\n    };\n    /**\n     * Pushes element(s) to the heap.\n     * @param  {...any} elements Elements to insert\n     * @return {Boolean} True if elements are present\n     */\n    Heap.prototype.push = function () {\n        var elements = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            elements[_i] = arguments[_i];\n        }\n        if (elements.length < 1) {\n            return false;\n        }\n        else if (elements.length === 1) {\n            return this.add(elements[0]);\n        }\n        else {\n            return this.addAll(elements);\n        }\n    };\n    /**\n     * Same as push & pop in sequence, but faster\n     * @param  {any} element Element to insert\n     * @return {any}  Extracted top node\n     */\n    Heap.prototype.pushpop = function (element) {\n        var _a;\n        if (this.compare(this.heapArray[0], element) < 0) {\n            _a = __read([this.heapArray[0], element], 2), element = _a[0], this.heapArray[0] = _a[1];\n            this._sortNodeDown(0);\n        }\n        return element;\n    };\n    /**\n     * Remove an element from the heap.\n     * @param  {any}   o      Element to be found\n     * @param  {Function} fn  Optional function to compare\n     * @return {Boolean}      True if the heap was modified\n     */\n    Heap.prototype.remove = function (o, fn) {\n        if (fn === void 0) { fn = Heap.defaultIsEqual; }\n        if (this.length > 0) {\n            if (o === undefined) {\n                this.pop();\n                return true;\n            }\n            else {\n                var idx = this.heapArray.findIndex(function (el) { return fn(el, o); });\n                if (idx >= 0) {\n                    if (idx === 0) {\n                        this.pop();\n                    }\n                    else if (idx === this.length - 1) {\n                        this.heapArray.pop();\n                    }\n                    else {\n                        this.heapArray.splice(idx, 1, this.heapArray.pop());\n                        this._sortNodeUp(idx);\n                        this._sortNodeDown(idx);\n                    }\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * Pop the current peek value, and add the new item.\n     * @param  {any} element  Element to replace peek\n     * @return {any}         Old peek\n     */\n    Heap.prototype.replace = function (element) {\n        var peek = this.heapArray[0];\n        this.heapArray[0] = element;\n        this._sortNodeDown(0);\n        return peek;\n    };\n    /**\n     * Size of the heap\n     * @return {Number}\n     */\n    Heap.prototype.size = function () {\n        return this.length;\n    };\n    /**\n     * Return the top (highest value) N elements of the heap.\n     *\n     * @param  {Number} n  Number of elements.\n     * @return {Array}    Array of length <= N.\n     */\n    Heap.prototype.top = function (n) {\n        if (n === void 0) { n = 1; }\n        if (this.heapArray.length === 0 || n <= 0) {\n            // Nothing to do\n            return [];\n        }\n        else if (this.heapArray.length === 1 || n === 1) {\n            // Just the peek\n            return [this.heapArray[0]];\n        }\n        else if (n >= this.heapArray.length) {\n            // The whole peek\n            return __spreadArray([], __read(this.heapArray));\n        }\n        else {\n            // Some elements\n            var result = this._topN_push(~~n);\n            return result;\n        }\n    };\n    /**\n     * Clone the heap's internal array\n     * @return {Array}\n     */\n    Heap.prototype.toArray = function () {\n        return __spreadArray([], __read(this.heapArray));\n    };\n    /**\n     * String output, call to Array.prototype.toString()\n     * @return {String}\n     */\n    Heap.prototype.toString = function () {\n        return this.heapArray.toString();\n    };\n    /**\n     * Get the element at the given index.\n     * @param  {Number} i Index to get\n     * @return {any}       Element at that index\n     */\n    Heap.prototype.get = function (i) {\n        return this.heapArray[i];\n    };\n    /**\n     * Get the elements of these node's children\n     * @param  {Number} idx Node index\n     * @return {Array(any)}  Children elements\n     */\n    Heap.prototype.getChildrenOf = function (idx) {\n        var _this = this;\n        return Heap.getChildrenIndexOf(idx)\n            .map(function (i) { return _this.heapArray[i]; })\n            .filter(function (e) { return e !== undefined; });\n    };\n    /**\n     * Get the element of this node's parent\n     * @param  {Number} idx Node index\n     * @return {any}     Parent element\n     */\n    Heap.prototype.getParentOf = function (idx) {\n        var pi = Heap.getParentIndexOf(idx);\n        return this.heapArray[pi];\n    };\n    /**\n     * Iterator interface\n     */\n    Heap.prototype[Symbol.iterator] = function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (!this.length) return [3 /*break*/, 2];\n                    return [4 /*yield*/, this.pop()];\n                case 1:\n                    _a.sent();\n                    return [3 /*break*/, 0];\n                case 2: return [2 /*return*/];\n            }\n        });\n    };\n    /**\n     * Returns an iterator. To comply with Java interface.\n     */\n    Heap.prototype.iterator = function () {\n        return this;\n    };\n    /**\n     * Limit heap size if needed\n     */\n    Heap.prototype._applyLimit = function () {\n        if (this._limit && this._limit < this.heapArray.length) {\n            var rm = this.heapArray.length - this._limit;\n            // It's much faster than splice\n            while (rm) {\n                this.heapArray.pop();\n                --rm;\n            }\n        }\n    };\n    /**\n     * Return the bottom (lowest value) N elements of the heap, without corner cases, unsorted\n     *\n     * @param  {Number} n  Number of elements.\n     * @return {Array}     Array of length <= N.\n     */\n    Heap.prototype._bottomN_push = function (n) {\n        // Use an inverted heap\n        var bottomHeap = new Heap(this.compare);\n        bottomHeap.limit = n;\n        bottomHeap.heapArray = this.heapArray.slice(-n);\n        bottomHeap.init();\n        var startAt = this.heapArray.length - 1 - n;\n        var parentStartAt = Heap.getParentIndexOf(startAt);\n        var indices = [];\n        for (var i = startAt; i > parentStartAt; --i) {\n            indices.push(i);\n        }\n        var arr = this.heapArray;\n        while (indices.length) {\n            var i = indices.shift();\n            if (this.compare(arr[i], bottomHeap.peek()) > 0) {\n                bottomHeap.replace(arr[i]);\n                if (i % 2) {\n                    indices.push(Heap.getParentIndexOf(i));\n                }\n            }\n        }\n        return bottomHeap.toArray();\n    };\n    /**\n     * Move a node to a new index, switching places\n     * @param  {Number} j First node index\n     * @param  {Number} k Another node index\n     */\n    Heap.prototype._moveNode = function (j, k) {\n        var _a;\n        _a = __read([this.heapArray[k], this.heapArray[j]], 2), this.heapArray[j] = _a[0], this.heapArray[k] = _a[1];\n    };\n    /**\n     * Move a node down the tree (to the leaves) to find a place where the heap is sorted.\n     * @param  {Number} i Index of the node\n     */\n    Heap.prototype._sortNodeDown = function (i) {\n        var _this = this;\n        var moveIt = i < this.heapArray.length - 1;\n        var self = this.heapArray[i];\n        var getPotentialParent = function (best, j) {\n            if (_this.heapArray.length > j && _this.compare(_this.heapArray[j], _this.heapArray[best]) < 0) {\n                best = j;\n            }\n            return best;\n        };\n        while (moveIt) {\n            var childrenIdx = Heap.getChildrenIndexOf(i);\n            var bestChildIndex = childrenIdx.reduce(getPotentialParent, childrenIdx[0]);\n            var bestChild = this.heapArray[bestChildIndex];\n            if (typeof bestChild !== 'undefined' && this.compare(self, bestChild) > 0) {\n                this._moveNode(i, bestChildIndex);\n                i = bestChildIndex;\n            }\n            else {\n                moveIt = false;\n            }\n        }\n    };\n    /**\n     * Move a node up the tree (to the root) to find a place where the heap is sorted.\n     * @param  {Number} i Index of the node\n     */\n    Heap.prototype._sortNodeUp = function (i) {\n        var moveIt = i > 0;\n        while (moveIt) {\n            var pi = Heap.getParentIndexOf(i);\n            if (pi >= 0 && this.compare(this.heapArray[pi], this.heapArray[i]) > 0) {\n                this._moveNode(i, pi);\n                i = pi;\n            }\n            else {\n                moveIt = false;\n            }\n        }\n    };\n    /**\n     * Return the top (highest value) N elements of the heap, without corner cases, unsorted\n     * Implementation: push.\n     *\n     * @param  {Number} n  Number of elements.\n     * @return {Array}     Array of length <= N.\n     */\n    Heap.prototype._topN_push = function (n) {\n        // Use an inverted heap\n        var topHeap = new Heap(this._invertedCompare);\n        topHeap.limit = n;\n        var indices = [0];\n        var arr = this.heapArray;\n        while (indices.length) {\n            var i = indices.shift();\n            if (i < arr.length) {\n                if (topHeap.length < n) {\n                    topHeap.push(arr[i]);\n                    indices.push.apply(indices, __spreadArray([], __read(Heap.getChildrenIndexOf(i))));\n                }\n                else if (this.compare(arr[i], topHeap.peek()) < 0) {\n                    topHeap.replace(arr[i]);\n                    indices.push.apply(indices, __spreadArray([], __read(Heap.getChildrenIndexOf(i))));\n                }\n            }\n        }\n        return topHeap.toArray();\n    };\n    /**\n     * Return the top (highest value) N elements of the heap, without corner cases, unsorted\n     * Implementation: init + push.\n     *\n     * @param  {Number} n  Number of elements.\n     * @return {Array}     Array of length <= N.\n     */\n    Heap.prototype._topN_fill = function (n) {\n        // Use an inverted heap\n        var heapArray = this.heapArray;\n        var topHeap = new Heap(this._invertedCompare);\n        topHeap.limit = n;\n        topHeap.heapArray = heapArray.slice(0, n);\n        topHeap.init();\n        var branch = Heap.getParentIndexOf(n - 1) + 1;\n        var indices = [];\n        for (var i = branch; i < n; ++i) {\n            indices.push.apply(indices, __spreadArray([], __read(Heap.getChildrenIndexOf(i).filter(function (l) { return l < heapArray.length; }))));\n        }\n        if ((n - 1) % 2) {\n            indices.push(n);\n        }\n        while (indices.length) {\n            var i = indices.shift();\n            if (i < heapArray.length) {\n                if (this.compare(heapArray[i], topHeap.peek()) < 0) {\n                    topHeap.replace(heapArray[i]);\n                    indices.push.apply(indices, __spreadArray([], __read(Heap.getChildrenIndexOf(i))));\n                }\n            }\n        }\n        return topHeap.toArray();\n    };\n    /**\n     * Return the top (highest value) N elements of the heap, without corner cases, unsorted\n     * Implementation: heap.\n     *\n     * @param  {Number} n  Number of elements.\n     * @return {Array}     Array of length <= N.\n     */\n    Heap.prototype._topN_heap = function (n) {\n        var topHeap = this.clone();\n        var result = [];\n        for (var i = 0; i < n; ++i) {\n            result.push(topHeap.pop());\n        }\n        return result;\n    };\n    /**\n     * Return index of the top element\n     * @param list\n     */\n    Heap.prototype._topIdxOf = function (list) {\n        if (!list.length) {\n            return -1;\n        }\n        var idx = 0;\n        var top = list[idx];\n        for (var i = 1; i < list.length; ++i) {\n            var comp = this.compare(list[i], top);\n            if (comp < 0) {\n                idx = i;\n                top = list[i];\n            }\n        }\n        return idx;\n    };\n    /**\n     * Return the top element\n     * @param list\n     */\n    Heap.prototype._topOf = function () {\n        var list = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            list[_i] = arguments[_i];\n        }\n        var heap = new Heap(this.compare);\n        heap.init(list);\n        return heap.peek();\n    };\n    return Heap;\n}());\n\nexport default Heap;\nexport { Heap, toInt };\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ExercisePage } from './exercise.page/exercise.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ExercisePage,\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ExerciseRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ExercisePage } from './exercise.page/exercise.page';\r\nimport { ExerciseRoutingModule } from './exercise-routing.module';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { ExerciseSettingsPage } from './exercise.page/components/exercise-settings.page/exercise-settings.page';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { AnswerIndicationComponent } from './exercise.page/components/answer-indication/answer-indication.component';\r\nimport { ListSelectComponent } from './exercise.page/components/exercise-settings.page/components/included-answers/list-select.component';\r\nimport { SharedComponentsModule } from '../shared/components/shared-components/shared-components.module';\r\nimport { ExerciseExplanationPage } from './exercise.page/components/exercise-help/exercise-explanation/exercise-explanation.page';\r\nimport { ExerciseExplanationContentDirective } from './exercise.page/components/exercise-help/exercise-explanation/exercise-explanation-content.directive';\r\nimport { ExerciseService } from './services/exercise/exercise.service';\r\nimport { ModalModule } from '../shared/modal/modal.module';\r\nimport { PureFunctionPipe } from '../shared/ng-utilities/pure-function-pipe/pure-function.pipe';\r\nimport { ConsoleLogComponentModule } from '../shared/ng-utilities/console-log-component/console-log-component.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ExercisePage,\r\n    ExerciseSettingsPage,\r\n    ExerciseExplanationPage,\r\n    AnswerIndicationComponent,\r\n    ListSelectComponent,\r\n    ExerciseExplanationContentDirective,\r\n    ...ExerciseService.ngComponents,\r\n    PureFunctionPipe,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ExerciseRoutingModule,\r\n    IonicModule,\r\n    SharedComponentsModule,\r\n    ReactiveFormsModule,\r\n    ModalModule,\r\n    ConsoleLogComponentModule,\r\n  ],\r\n})\r\nexport class ExerciseModule {\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  HostBinding\r\n} from '@angular/core';\r\nimport { Exercise } from '../../../Exercise';\r\n\r\n@Component({\r\n  selector: 'app-answer-indication',\r\n  templateUrl: './answer-indication.component.html',\r\n  styleUrls: ['./answer-indication.component.scss'],\r\n})\r\nexport class AnswerIndicationComponent {\r\n  @Input()\r\n  answer: Exercise.Answer | null = null;\r\n\r\n  @HostBinding('class.--focused')\r\n  @Input()\r\n  isFocused: boolean = false;\r\n\r\n  @HostBinding('class.--wrong')\r\n  @Input()\r\n  wasAnsweredWrong: boolean = false;\r\n\r\n  constructor() { }\r\n}\r\n","import {ComponentFactoryResolver, Directive, ElementRef, Input, ViewContainerRef} from '@angular/core';\r\nimport {Exercise} from \"../../../../Exercise\";\r\n\r\n@Directive({\r\n  selector: '[exerciseExplanationContent]'\r\n})\r\nexport class ExerciseExplanationContentDirective {\r\n\r\n  @Input('exerciseExplanationContent')\r\n  set content(content: Exercise.ExerciseExplanationContent) {\r\n    if (typeof content === 'string') {\r\n      this._eRef.nativeElement.innerHTML = content;\r\n    } else {\r\n      this._viewContainerRef.clear();\r\n      this._viewContainerRef.createComponent(\r\n        this._cfResolver.resolveComponentFactory(content),\r\n      );\r\n    }\r\n  }\r\n\r\n  constructor(\r\n    private _eRef: ElementRef,\r\n    private _viewContainerRef: ViewContainerRef,\r\n    private _cfResolver: ComponentFactoryResolver,\r\n  ) {\r\n  }\r\n\r\n  private _clearCurrentContent() {\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-exercise-explanation',\r\n  templateUrl: './exercise-explanation.page.html',\r\n  styleUrls: ['./exercise-explanation.page.scss'],\r\n})\r\nexport class ExerciseExplanationPage {\r\n  @Input()\r\n  content: string;\r\n\r\n  @Input()\r\n  exerciseName: string;\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  forwardRef\r\n} from '@angular/core';\r\nimport { BaseControlValueAccessorComponent } from '../../../../../../shared/ts-utility';\r\nimport { take } from 'rxjs/operators';\r\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-list-select',\r\n  templateUrl: './list-select.component.html',\r\n  styleUrls: ['./list-select.component.scss'],\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => ListSelectComponent),\r\n      multi: true,\r\n    },\r\n  ],\r\n})\r\nexport class ListSelectComponent extends BaseControlValueAccessorComponent<(string | number)[]> {\r\n  @Input()\r\n  allAvailableOptions: {\r\n    label: string,\r\n    value: string | number,\r\n  }[];\r\n\r\n  @Input()\r\n  label: string;\r\n\r\n  async onChange(answer: string | number, isSelected: boolean): Promise<void> {\r\n    const currentValue: (string | number)[] = [...(await this.value$.pipe(take(1)).toPromise())];\r\n    let newValue: (string | number)[];\r\n    if (currentValue.includes(answer) && !isSelected) {\r\n      newValue = currentValue.filter(value => value !== answer);\r\n    } else if (!currentValue.includes(answer) && isSelected) {\r\n      newValue = [\r\n        ...currentValue,\r\n        answer,\r\n      ]\r\n    } else {\r\n      return;\r\n    }\r\n\r\n    this.setViewValue(newValue);\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { ModalController } from '@ionic/angular';\r\nimport { FormControl, FormGroup, TAbstractControlsOf } from '../../../../shared/reactive-forms';\r\nimport { Exercise, } from '../../../Exercise';\r\nimport { ExerciseSettingsData, GlobalExerciseSettings, } from '../../../utility';\r\nimport * as _ from 'lodash';\r\nimport { collapseVertical } from '../../../../shared/animations';\r\nimport SettingValueType = Exercise.SettingValueType;\r\n\r\ninterface ExerciseSettingsControls {\r\n  playCadenceOptions: 'ALWAYS' | 'ONLY_ON_REPEAT' | /*'EVERY_NEW_KEY' TODO(OE-12) |*/ 'NEVER' /*| 'EVERY TODO(OE-13)'*/;\r\n  // playCadenceEvery: number; // todo(OE-13)\r\n  bpm: number,\r\n  moveToNextQuestionAutomatically: boolean,\r\n  adaptive: boolean,\r\n}\r\n\r\n@Component({\r\n  selector: 'app-exercise-settings.page',\r\n  templateUrl: './exercise-settings.page.html',\r\n  styleUrls: ['./exercise-settings.page.scss'],\r\n  animations: [\r\n    collapseVertical,\r\n  ]\r\n})\r\nexport class ExerciseSettingsPage {\r\n  readonly generalFormGroup = new FormGroup<ExerciseSettingsControls>({\r\n    playCadenceOptions: new FormControl('ALWAYS'),\r\n    // playCadenceEvery: new FormControl(5),\r\n    adaptive: new FormControl<boolean>(false),\r\n    bpm: new FormControl<number>(120),\r\n    moveToNextQuestionAutomatically: new FormControl<boolean>(false),\r\n  });\r\n\r\n  exerciseSettingsDescriptor: Exercise.SettingsControlDescriptor[];\r\n  exerciseFormGroup: FormGroup<{[key: string]: FormControl}>;\r\n\r\n  @Input()\r\n  exerciseName: string;\r\n\r\n  @Input()\r\n  set currentGlobalSettings(currentSettings: GlobalExerciseSettings) {\r\n    this.generalFormGroup.reset({\r\n      playCadenceOptions: ((): ExerciseSettingsControls['playCadenceOptions'] => {\r\n        switch (currentSettings.playCadence) {\r\n          case true:\r\n            return 'ALWAYS';\r\n          case false:\r\n            return 'NEVER';\r\n          case 'ONLY_ON_REPEAT':\r\n            return 'ONLY_ON_REPEAT';\r\n          // TODO(OE-12)\r\n          // case 'EVERY_NEW_KEY':\r\n          //   return 'EVERY_NEW_KEY';\r\n          default:\r\n            return 'ALWAYS';\r\n        }\r\n      })(),\r\n      adaptive: currentSettings.adaptive,\r\n      bpm: currentSettings.bpm,\r\n      moveToNextQuestionAutomatically: currentSettings.moveToNextQuestionAutomatically,\r\n    })\r\n  }\r\n\r\n  @Input()\r\n  set currentExerciseSettings(currentSettings: { [key: string]: SettingValueType }) {\r\n    this.exerciseFormGroup.reset(currentSettings);\r\n  }\r\n\r\n  @Input()\r\n  allAvailableAnswers: string[];\r\n\r\n  @Input('exerciseSettingsDescriptor')\r\n  set exerciseSettingsDescriptorInput(settingsDescriptor: Exercise.SettingsControlDescriptor[]) {\r\n    this.exerciseSettingsDescriptor = settingsDescriptor;\r\n    const controls: TAbstractControlsOf<{[key: string]: any}, {}> = {};\r\n    for (let settingsControlDescriptor of settingsDescriptor) {\r\n      controls[settingsControlDescriptor.key] = new FormControl();\r\n    }\r\n    this.exerciseFormGroup = new FormGroup(controls);\r\n  }\r\n\r\n  constructor(\r\n    private _modalController: ModalController,\r\n  ) {\r\n  }\r\n\r\n  async onClose(): Promise<ExerciseSettingsData> {\r\n    const newGlobalSettings: GlobalExerciseSettings = this._getNewSettings();\r\n    const exerciseSettingsData: ExerciseSettingsData = {\r\n      globalSettings: newGlobalSettings,\r\n      exerciseSettings: this.exerciseFormGroup.getRawValue(),\r\n    }\r\n    return exerciseSettingsData;\r\n  }\r\n\r\n  private _getNewSettings(): GlobalExerciseSettings {\r\n    const formGroupValue = this.generalFormGroup.getRawValue();\r\n    return {\r\n      playCadence: ((): GlobalExerciseSettings['playCadence'] => {\r\n        const valueMapping: { [key in ExerciseSettingsControls['playCadenceOptions']]: GlobalExerciseSettings['playCadence'] } = {\r\n          // EVERY_NEW_KEY: 'EVERY_NEW_KEY', // TODO(OE-12)\r\n          ALWAYS: true,\r\n          NEVER: false,\r\n          ONLY_ON_REPEAT: 'ONLY_ON_REPEAT',\r\n        };\r\n        return valueMapping[formGroupValue.playCadenceOptions];\r\n      })(),\r\n      adaptive: formGroupValue.adaptive,\r\n      bpm: formGroupValue.bpm,\r\n      moveToNextQuestionAutomatically: formGroupValue.moveToNextQuestionAutomatically,\r\n    }\r\n  }\r\n\r\n  isShowExerciseControl(controlDescriptor: Exercise.SettingsControlDescriptor): boolean {\r\n    return _.isNil(controlDescriptor.show) ? true : controlDescriptor.show(this.exerciseFormGroup.value);\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { ExerciseStateService } from '../services/exercise-state/exercise-state.service';\r\nimport { ModalController } from '@ionic/angular';\r\nimport { ExerciseSettingsPage } from './components/exercise-settings.page/exercise-settings.page';\r\nimport * as _ from 'lodash';\r\nimport { ExerciseExplanationService } from '../services/exercise-explanation.service';\r\nimport { Exercise } from '../Exercise';\r\n\r\n@Component({\r\n  selector: 'app-exercise-page',\r\n  templateUrl: './exercise.page.html',\r\n  styleUrls: ['./exercise.page.scss'],\r\n  providers: [\r\n    ExerciseStateService,\r\n    ExerciseExplanationService,\r\n  ]\r\n})\r\nexport class ExercisePage {\r\n  readonly isAutoLayout: boolean = Array.isArray(this.state.answerList);\r\n  wrongAnswers: string[] = [];\r\n  rightAnswer: string | null = null;\r\n\r\n  get isQuestionCompleted(): boolean {\r\n    return !!this.state.currentAnswers[this.state.currentAnswers.length - 1]?.answer;\r\n  }\r\n\r\n  get correctAnswersPercentage(): number {\r\n    if (!this.state.totalQuestions) {\r\n      return 0;\r\n    }\r\n    return (this.state.totalCorrectAnswers / this.state.totalQuestions) * 100;\r\n  }\r\n\r\n  constructor(\r\n    public state: ExerciseStateService,\r\n    public exerciseExplanation: ExerciseExplanationService,\r\n    private _modalController: ModalController,\r\n  ) {\r\n    this._init();\r\n  }\r\n\r\n  onAnswer(answer: string): void {\r\n    if (this.isQuestionCompleted) {\r\n      // TODO(OE-8) - play the clicked answer\r\n      return;\r\n    }\r\n    const isRight: boolean = this.state.answer(answer);\r\n    if (isRight) {\r\n      this.rightAnswer = answer;\r\n      setTimeout(() => {\r\n        this.rightAnswer = null;\r\n      }, 100);\r\n      this.wrongAnswers = [];\r\n    } else {\r\n      this.wrongAnswers.push(answer);\r\n    }\r\n  }\r\n\r\n  async editSettings(): Promise<void> {\r\n    const allAvailableAnswers: string[] = typeof this.state.answerList === 'object' ? _.flatMap(this.state.answerList) : this.state.answerList;\r\n    const modal = await this._modalController.create({\r\n      component: ExerciseSettingsPage,\r\n      componentProps: {\r\n        exerciseName: this.state.name,\r\n        currentGlobalSettings: this.state.globalSettings,\r\n        exerciseSettingsDescriptorInput: this.state.exerciseSettingsDescriptor, // must be before currentExerciseSettings\r\n        currentExerciseSettings: this.state.exerciseSettings,\r\n        allAvailableAnswers: allAvailableAnswers,\r\n      }\r\n    });\r\n    await modal.present();\r\n    this.state.updateSettings((await modal.onDidDismiss()).data);\r\n  }\r\n\r\n  private async _init(): Promise<void> {\r\n    await this.exerciseExplanation.init();\r\n    await this.state.init()\r\n  }\r\n\r\n  readonly normalizeAnswerLayoutCellConfig = Exercise.normalizeAnswerLayoutCellConfig;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {ExerciseStateService} from \"./exercise-state/exercise-state.service\";\r\nimport {ExerciseExplanationPage} from \"../exercise.page/components/exercise-help/exercise-explanation/exercise-explanation.page\";\r\nimport {ModalController} from \"@ionic/angular\";\r\nimport {ExerciseSettingsDataService} from \"../../services/exercise-settings-data.service\";\r\n\r\n@Injectable()\r\nexport class ExerciseExplanationService {\r\n  constructor(\r\n    private _state: ExerciseStateService,\r\n    private _modalController: ModalController,\r\n    private _exerciseSettingsData: ExerciseSettingsDataService,\r\n  ) {\r\n  }\r\n\r\n  async openExplanation(): Promise<void> {\r\n    const modal = await this._modalController.create({\r\n      component: ExerciseExplanationPage,\r\n      componentProps: {\r\n        content: this._state.exercise.explanation,\r\n        exerciseName: this._state.name,\r\n      }\r\n    });\r\n    await modal.present();\r\n    await modal.onDidDismiss();\r\n  }\r\n\r\n  async init(): Promise<void> {\r\n    const exerciseSettings = await this._exerciseSettingsData.getExerciseSettings(this._state.exercise.id);\r\n    if (this._state.exercise.explanation && !exerciseSettings?.wasExplanationDisplayed) {\r\n      await this.openExplanation();\r\n      await this._exerciseSettingsData.saveExerciseSettings(this._state.exercise.id, {\r\n        wasExplanationDisplayed: true,\r\n      })\r\n    }\r\n  }\r\n}\r\n","import { Exercise } from '../../Exercise';\r\nimport Heap from 'heap-js';\r\nimport ExerciseExplanationContent = Exercise.ExerciseExplanationContent;\r\n\r\ninterface QuestionToRepeat {\r\n  timeToReAsk?: number; // null means the question was asked for the first time\r\n  timesAnsweredCorrectly?: number;\r\n  question: Exercise.Question;\r\n}\r\n\r\nexport class AdaptiveExercise implements Exercise.IExercise {\r\n  readonly summary: string = this._exercise.summary;\r\n  readonly id: string = this._exercise.id;\r\n  readonly name: string = this._exercise.name;\r\n  readonly explanation: ExerciseExplanationContent = this._exercise.explanation;\r\n  settingsDescriptor: Exercise.SettingsControlDescriptor<{ [key: string]: Exercise.SettingValueType; }>[] | undefined = this._exercise.settingsDescriptor;\r\n  private _lastQuestion: QuestionToRepeat | null = null;\r\n  private _wrongQuestionsHeap = new Heap<Required<QuestionToRepeat>>((a: Required<QuestionToRepeat>, b: Required<QuestionToRepeat>) => a.timeToReAsk - b.timeToReAsk);\r\n  private _questionIndex: number = -1;\r\n\r\n  constructor(private _exercise: Exercise.IExercise) {\r\n  }\r\n\r\n  updateSettings(settings: { [key: string]: Exercise.SettingValueType; }): void {\r\n    this._exercise.updateSettings?.(settings);\r\n  }\r\n\r\n  getCurrentSettings(): { [key: string]: Exercise.SettingValueType; } {\r\n    return this._exercise.getCurrentSettings?.()!;\r\n  }\r\n\r\n  getAnswerList(): Exercise.AnswerList {\r\n    return this._exercise.getAnswerList();\r\n  }\r\n\r\n  getQuestion(): Exercise.Question {\r\n    this._questionIndex++;\r\n    if (!!this._lastQuestion) {\r\n      throw new Error(`New getQuestion was called but previous answer not reported`);\r\n    }\r\n    const nextQuestionToRepeat: Required<QuestionToRepeat> | undefined = this._wrongQuestionsHeap.peek();\r\n    if (nextQuestionToRepeat && nextQuestionToRepeat.timeToReAsk <= this._questionIndex) {\r\n      this._lastQuestion = this._wrongQuestionsHeap.pop()!;\r\n    } else {\r\n      this._lastQuestion = {\r\n        question: this._exercise.getQuestion(),\r\n      };\r\n    }\r\n\r\n    return this._lastQuestion.question;\r\n  }\r\n\r\n  reportAnswerCorrectness(wasAnswerRight: boolean | 'SKIPPED'): void {\r\n    if (wasAnswerRight === 'SKIPPED') {\r\n      this._lastQuestion = null;\r\n      return;\r\n    }\r\n    if (!this._lastQuestion) {\r\n      throw new Error(`Can't report answer for a question that was never asked`);\r\n    }\r\n\r\n    if (wasAnswerRight && !!this._lastQuestion?.timeToReAsk && this._lastQuestion.timeToReAsk < 2 ** 3) {\r\n      this._wrongQuestionsHeap.push({\r\n        question: this._lastQuestion.question,\r\n        timeToReAsk: this._questionIndex + 2 ** (this._lastQuestion.timesAnsweredCorrectly! + 1),\r\n        timesAnsweredCorrectly: this._lastQuestion.timesAnsweredCorrectly! + 1,\r\n      });\r\n    } else if (!wasAnswerRight) {\r\n      this._wrongQuestionsHeap.push({\r\n        question: this._lastQuestion.question,\r\n        timeToReAsk: this._questionIndex + 2,\r\n        timesAnsweredCorrectly: 1,\r\n      });\r\n    }\r\n\r\n    this._lastQuestion = null;\r\n  }\r\n\r\n  reset(): void {\r\n    this._wrongQuestionsHeap.clear();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ExerciseService } from '../exercise/exercise.service';\r\nimport { Exercise } from '../../Exercise';\r\nimport {\r\n  PlayerService,\r\n  PartToPlay,\r\n} from '../../../services/player.service';\r\nimport {\r\n  toSteadyPart,\r\n  GlobalExerciseSettings,\r\n  ExerciseSettingsData,\r\n} from '../../utility';\r\nimport { ExerciseSettingsDataService } from '../../../services/exercise-settings-data.service';\r\nimport AnswerList = Exercise.AnswerList;\r\nimport Answer = Exercise.Answer;\r\nimport { AdaptiveExercise } from './adaptive-exercise';\r\n\r\nconst DEFAULT_EXERCISE_SETTINGS: GlobalExerciseSettings = {\r\n  playCadence: true,\r\n  adaptive: false,\r\n  bpm: 120,\r\n  moveToNextQuestionAutomatically: false,\r\n};\r\n\r\ninterface CurrentAnswer {\r\n  answer: Answer | null;\r\n  wasWrong: boolean;\r\n}\r\n\r\n@Injectable()\r\nexport class ExerciseStateService {\r\n  private readonly _originalExercise: Exercise.IExercise = this._exerciseService.getExercise(this._activatedRoute.snapshot.paramMap.get('id')!);\r\n  private _globalSettings: GlobalExerciseSettings = DEFAULT_EXERCISE_SETTINGS;\r\n  readonly name: string = this.exercise.name;\r\n  answerList: AnswerList = this.exercise.getAnswerList();\r\n  private _adaptiveExercise: AdaptiveExercise = new AdaptiveExercise(this._originalExercise);\r\n  private _currentQuestion: Exercise.Question = this.exercise.getQuestion();\r\n  private _currentSegmentToAnswer: number = 0;\r\n\r\n  constructor(\r\n    private _activatedRoute: ActivatedRoute,\r\n    private _exerciseService: ExerciseService,\r\n    private _player: PlayerService,\r\n    private _exerciseSettingsData: ExerciseSettingsDataService,\r\n  ) {\r\n  }\r\n\r\n  get globalSettings(): GlobalExerciseSettings {\r\n    return this._globalSettings;\r\n  }\r\n\r\n  private _totalCorrectAnswers: number = 0;\r\n\r\n  get totalCorrectAnswers(): number {\r\n    return this._totalCorrectAnswers;\r\n  }\r\n\r\n  private _totalQuestions: number = 0;\r\n\r\n  get totalQuestions(): number {\r\n    return this._totalQuestions;\r\n  }\r\n\r\n  private _currentAnswers: CurrentAnswer[] = [];\r\n\r\n  get currentAnswers(): CurrentAnswer[] {\r\n    return this._currentAnswers;\r\n  }\r\n\r\n  private _currentlyPlayingSegment: number | null = null;\r\n\r\n  get currentlyPlayingSegment(): number | null {\r\n    return this._currentlyPlayingSegment;\r\n  }\r\n\r\n  private _highlightedAnswer: string | null = null;\r\n\r\n  get highlightedAnswer(): string | null {\r\n    return this._highlightedAnswer;\r\n  }\r\n\r\n  get hasCadence(): boolean {\r\n    return !!this._currentQuestion.cadence\r\n  }\r\n\r\n  get exerciseSettingsDescriptor(): Exercise.SettingsControlDescriptor[] {\r\n    const settingsDescriptor: Exercise.SettingsControlDescriptor[] | undefined = this.exercise.settingsDescriptor;\r\n    return settingsDescriptor || [];\r\n  }\r\n\r\n  get exerciseSettings(): { [key: string]: Exercise.SettingValueType } {\r\n    return this.exercise.getCurrentSettings?.() || {};\r\n  }\r\n\r\n  private get _areAllSegmentsAnswered(): boolean {\r\n    return !this._currentAnswers.filter(answer => answer.answer === null).length\r\n  }\r\n\r\n  get exercise(): Exercise.IExercise {\r\n    return this._globalSettings.adaptive ? this._adaptiveExercise : this._originalExercise;\r\n  }\r\n\r\n  answer(answer: string): boolean {\r\n    const isRight = this._currentQuestion.segments[this._currentSegmentToAnswer].rightAnswer === answer;\r\n    if (!isRight) {\r\n      this._currentAnswers[this._currentSegmentToAnswer].wasWrong = true;\r\n    } else {\r\n      this._totalQuestions++;\r\n      if (!this._currentAnswers[this._currentSegmentToAnswer].wasWrong) {\r\n        this._totalCorrectAnswers++;\r\n      }\r\n      this._currentAnswers[this._currentSegmentToAnswer].answer = answer;\r\n      this._currentSegmentToAnswer++;\r\n\r\n      // Last segment was answered\r\n      if (this._currentSegmentToAnswer === this._currentQuestion.segments.length) {\r\n        // if not all answers are correct\r\n        if (this._globalSettings.adaptive) {\r\n          const areAllSegmentsCorrect: boolean = !this._currentAnswers.filter(answerSegment => answerSegment.wasWrong).length;\r\n          this._adaptiveExercise.reportAnswerCorrectness(areAllSegmentsCorrect);\r\n        }\r\n        this._afterCorrectAnswer()\r\n        .then(() => {\r\n          if (this._globalSettings.moveToNextQuestionAutomatically) {\r\n            // Make sure we are still in the same question (i.e. \"Next\" wasn't clicked by user)\r\n            const numberOfAnsweredSegments = this._currentAnswers.filter(answer => !!answer.answer).length;\r\n            if (numberOfAnsweredSegments === this._currentQuestion.segments.length) {\r\n              this.nextQuestion();\r\n            }\r\n          }\r\n        })\r\n      }\r\n    }\r\n    return isRight;\r\n  }\r\n\r\n  async playCurrentCadenceAndQuestion(): Promise<void> {\r\n    const partsToPlay: PartToPlay[] = this._getCurrentQuestionPartsToPlay();\r\n    if (this._currentQuestion.cadence && this._globalSettings.playCadence) {\r\n      partsToPlay.unshift(\r\n        {\r\n          partOrTime: toSteadyPart(this._currentQuestion.cadence),\r\n          bpm: 120,\r\n        },\r\n        {\r\n          partOrTime: 100,\r\n        },\r\n      );\r\n    }\r\n    if (this._areAllSegmentsAnswered && this._currentQuestion.afterCorrectAnswer) {\r\n      partsToPlay.push(...this._getAfterCorrectAnswerParts());\r\n    }\r\n    await this._player.playMultipleParts(partsToPlay);\r\n    this._currentlyPlayingSegment = null;\r\n  }\r\n\r\n  async playCurrentQuestion(): Promise<void> {\r\n    await this._player.playMultipleParts(this._getCurrentQuestionPartsToPlay());\r\n    this._currentlyPlayingSegment = null;\r\n  }\r\n\r\n  nextQuestion(): Promise<void> {\r\n    // if still unanswered questions\r\n    if (this._globalSettings.adaptive && !!this._currentQuestion && !this._areAllSegmentsAnswered) {\r\n      try {\r\n        this._adaptiveExercise.reportAnswerCorrectness(true); // reporting true to ignore it in the future\r\n      } catch (e) {}\r\n    }\r\n    this._currentQuestion = this.exercise.getQuestion();\r\n    this._currentAnswers = this._currentQuestion.segments.map(() => ({\r\n      wasWrong: false,\r\n      answer: null,\r\n    }));\r\n    this._currentSegmentToAnswer = 0;\r\n\r\n    if (this.globalSettings.playCadence === 'ONLY_ON_REPEAT') {\r\n      return this.playCurrentQuestion();\r\n    } else {\r\n      return this.playCurrentCadenceAndQuestion();\r\n    }\r\n  }\r\n\r\n  updateSettings(settings: ExerciseSettingsData): void {\r\n    this._exerciseSettingsData.saveExerciseSettings(this.exercise.id, settings);\r\n    this._globalSettings = settings.globalSettings;\r\n    this._player.setBpm(this._globalSettings.bpm);\r\n    this._updateExerciseSettings(settings.exerciseSettings);\r\n    this.nextQuestion();\r\n  }\r\n\r\n  async init(): Promise<void> {\r\n    const settings: Partial<ExerciseSettingsData> | undefined = await this._exerciseSettingsData.getExerciseSettings(this.exercise.id);\r\n    if (settings?.globalSettings) {\r\n      this._globalSettings = settings.globalSettings;\r\n    }\r\n    if (settings?.exerciseSettings) {\r\n      this._updateExerciseSettings(settings.exerciseSettings);\r\n    }\r\n    await this.nextQuestion();\r\n  }\r\n\r\n  private _getCurrentQuestionPartsToPlay(): PartToPlay[] {\r\n    return this._currentQuestion.segments.map((segment, i): PartToPlay => ({\r\n      partOrTime: toSteadyPart(segment.partToPlay),\r\n      beforePlaying: () => {\r\n        this._currentlyPlayingSegment = i;\r\n      },\r\n    }));\r\n  }\r\n\r\n  private _updateExerciseSettings(exerciseSettings: { [key: string]: Exercise.SettingValueType }): void {\r\n    if (!this.exercise.updateSettings) {\r\n      return;\r\n    }\r\n    this.exercise.updateSettings(exerciseSettings);\r\n    this.answerList = this.exercise.getAnswerList();\r\n    this._adaptiveExercise.reset();\r\n  }\r\n\r\n  private _getAfterCorrectAnswerParts(): PartToPlay[] {\r\n    if (!this._currentQuestion.afterCorrectAnswer) {\r\n      return [];\r\n    }\r\n\r\n    return this._currentQuestion.afterCorrectAnswer.map(({\r\n      partToPlay,\r\n      answerToHighlight,\r\n    }): PartToPlay => ({\r\n      beforePlaying: () => {\r\n        this._highlightedAnswer = answerToHighlight || null;\r\n      },\r\n      partOrTime: partToPlay,\r\n    }));\r\n  }\r\n\r\n  private async _afterCorrectAnswer(): Promise<void> {\r\n    if (!this._currentQuestion.afterCorrectAnswer) {\r\n      return;\r\n    }\r\n\r\n    await this._player.playMultipleParts(this._getAfterCorrectAnswerParts());\r\n    this._highlightedAnswer = null;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ExerciseSettingsData } from '../exercise/utility';\r\nimport { StorageService } from '../storage/storage.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ExerciseSettingsDataService {\r\n  private readonly _exerciseSettingsKey: string = 'exerciseSettings';\r\n\r\n  constructor(private _storageService: StorageService) {\r\n  }\r\n\r\n  async saveExerciseSettings(exerciseId: string, settings: Partial<ExerciseSettingsData>): Promise<void> {\r\n    const currentExercisesSettings: {\r\n      [exerciseKey: string]: ExerciseSettingsData\r\n    } = await this._storageService.get(this._exerciseSettingsKey) || {};\r\n    currentExercisesSettings[exerciseId] = {\r\n      ...currentExercisesSettings[exerciseId],\r\n      ...settings\r\n    };\r\n    await this._storageService.set(this._exerciseSettingsKey, currentExercisesSettings);\r\n  }\r\n\r\n  async getExerciseSettings(exerciseId: string): Promise<Partial<ExerciseSettingsData> | undefined> {\r\n    return (await this._storageService.get(this._exerciseSettingsKey))?.[exerciseId];\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ConsoleLogComponent } from './console-log.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ConsoleLogComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  exports: [\r\n    ConsoleLogComponent,\r\n  ]\r\n})\r\nexport class ConsoleLogComponentModule { }\r\n","import { Component, Input, } from '@angular/core';\r\n\r\n/**\r\n * For debugging purposes only\r\n * */\r\n@Component({\r\n  selector: 'app-console-log',\r\n  template: '',\r\n})\r\nexport class ConsoleLogComponent {\r\n  @Input('message')\r\n  set message(msg: any) {\r\n    console.log(msg);\r\n  }\r\n\r\n  constructor() {\r\n  }\r\n}\r\n","import {\r\n  Pipe, PipeTransform,\r\n} from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'pureFunction',\r\n  pure: true,\r\n})\r\nexport class PureFunctionPipe implements PipeTransform {\r\n  transform<T, U extends Array<any>>(pureFunction: (...args: U) => T, ...functionArgs: U): T {\r\n    return pureFunction(...functionArgs);\r\n  }\r\n}\r\n","import { ControlValueAccessor as NgControlValueAccessor } from '@angular/forms';\r\n\r\nexport abstract class ControlValueAccessor<GValue = any> implements NgControlValueAccessor {\r\n  abstract writeValue(value: GValue): void;\r\n\r\n  onChange ? = (value: GValue | null): void => {};\r\n  onTouched ? = (): void => {};\r\n\r\n  registerOnChange(fn: (value: GValue | null) => void): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: () => void): void {\r\n    this.onTouched = fn;\r\n  }\r\n}\r\n","import {\r\n  combineLatest,\r\n  defer,\r\n  merge,\r\n  Observable,\r\n  of,\r\n  Subscription,\r\n  Subject,\r\n} from 'rxjs';\r\nimport {\r\n  distinctUntilChanged,\r\n  map,\r\n  startWith,\r\n  takeUntil,\r\n} from 'rxjs/operators';\r\nimport {\r\n  IAbstractControlOptions,\r\n  IControlUpdateOptions,\r\n  TControlPath,\r\n  TControlStatus,\r\n  ValidationErrors,\r\n  ValidatorFn,\r\n} from './types';\r\nimport {\r\n  IAbstractControl,\r\n  IControlErrorRef,\r\n  IControlsParent,\r\n} from './abstractControl';\r\nimport {\r\n  AbstractControlOptions,\r\n  AbstractControl as NgAbstractControl,\r\n} from '@angular/forms';\r\nimport * as _ from 'lodash';\r\nimport {\r\n  timeoutAsPromise,\r\n  OneOrMany,\r\n  toArray,\r\n  isValueTruthy\r\n} from '../ts-utility';\r\n\r\nfunction getControlValue<GValue, GErrors extends ValidationErrors>(control: IAbstractControl<GValue, GErrors>): GValue {\r\n  if ((control as any).getRawValue) {\r\n    return (control as any).getRawValue();\r\n  }\r\n  return control.value;\r\n}\r\n\r\nfunction getTakeUntilWasNotProvidedError(functionName: string): Error {\r\n  return new Error(`${functionName} was called but takeUntil$ was not provided. Please add a takeUntil$ Observable that completes to the control options when creating to avoid memory leak.`);\r\n}\r\n\r\nexport class ControlMethods {\r\n  static getValueStream<GValue, GErrors extends ValidationErrors>(control: IAbstractControl<GValue, GErrors>): Observable<GValue> {\r\n    return merge(\r\n      defer(() => of(getControlValue(control))),\r\n      control.valueChanges.pipe(\r\n        map(() => getControlValue(control)),\r\n        distinctUntilChanged(),\r\n      ),\r\n    );\r\n  }\r\n\r\n  static getErrorStream<GValue, GErrors extends ValidationErrors>(\r\n    control: IAbstractControl<GValue, GErrors>,\r\n    setErrorsWasCalled$: Observable<Partial<GErrors> | null>,\r\n  ): Observable<Partial<GErrors> | null> {\r\n    return merge(\r\n      defer(() => of(control.errors)),\r\n      setErrorsWasCalled$,\r\n      control.valueChanges.pipe(\r\n        map(() => control.errors),\r\n        distinctUntilChanged((a, b) => _.isEqual(a, b)),\r\n      ),\r\n    )\r\n      .pipe(\r\n        distinctUntilChanged(),\r\n      );\r\n  }\r\n\r\n  static getIsValidAndDirtyStream<GValue, GErrors extends ValidationErrors>(\r\n    control: IAbstractControl<GValue, GErrors>,\r\n  ): Observable<boolean> {\r\n    return combineLatest([\r\n      control.isValid$,\r\n      control.isDirty$,\r\n    ])\r\n      .pipe(\r\n        map(conditions => _.every(conditions)),\r\n        distinctUntilChanged(),\r\n      );\r\n  }\r\n\r\n  static getStatusStream<GValue, GErrors extends ValidationErrors>(control: IAbstractControl<GValue, GErrors>): Observable<TControlStatus> {\r\n    return merge(\r\n      defer(() => of(control.status)),\r\n      control.statusChanges.pipe(\r\n        map(() => control.status),\r\n        distinctUntilChanged(),\r\n      ),\r\n    );\r\n  }\r\n\r\n  static getIsEnabledStream<GValue, GErrors extends ValidationErrors>(control: IAbstractControl<GValue, GErrors>): Observable<boolean> {\r\n    return merge(\r\n      defer(() => of(control.enabled)),\r\n      control.statusChanges.pipe(\r\n        map(() => control.enabled),\r\n        distinctUntilChanged(),\r\n      ),\r\n    );\r\n  }\r\n\r\n  static getIsDisabledStream<GValue, GErrors extends ValidationErrors>(control: IAbstractControl<GValue, GErrors>): Observable<boolean> {\r\n    return merge(\r\n      defer(() => of(control.disabled)),\r\n      control.statusChanges.pipe(\r\n        map(() => control.disabled),\r\n        distinctUntilChanged(),\r\n      ),\r\n    );\r\n  }\r\n\r\n  static setIsEnabled<GValue, GErrors extends ValidationErrors>(control: IAbstractControl<GValue, GErrors>, enabled: boolean, opts?: IControlUpdateOptions): void {\r\n    if (enabled === control.enabled) {\r\n      return;\r\n    }\r\n    if (enabled) {\r\n      control.enable(opts);\r\n    } else {\r\n      control.disable(opts);\r\n    }\r\n  }\r\n\r\n  static setIsDisabled<GValue, GErrors extends ValidationErrors>(control: IAbstractControl<GValue, GErrors>, disabled: boolean, opts?: IControlUpdateOptions): void {\r\n    ControlMethods.setIsEnabled(control, !disabled, opts);\r\n  }\r\n\r\n  static async setErrors<GValue, GErrors extends ValidationErrors>(\r\n    control: IAbstractControl<GValue, GErrors>,\r\n    getErrorSubject: () => Subject<Partial<GErrors> | null>,\r\n    errors: Partial<GErrors> | null,\r\n    opts: Pick<IControlUpdateOptions, 'emitEvent'> = {},\r\n  ): Promise<void> {\r\n    NgAbstractControl.prototype.setErrors.bind(control)(errors, opts);\r\n    // super.setErrors(errors, opts);\r\n    // in case of async validation - setErrors might be called before the properties of this class\r\n    // are initialized\r\n    if (!getErrorSubject()) {\r\n      await timeoutAsPromise();\r\n    }\r\n    // make sure that the errors we update on the subject is equal to the errors argument we got\r\n    // to avoid clashing with parallel calls to setErrors\r\n    if (control.errors === errors) {\r\n      getErrorSubject()\r\n        .next(errors);\r\n    }\r\n  }\r\n\r\n  static disableWhile<GValue, GErrors extends ValidationErrors>(\r\n    control: IAbstractControl<GValue, GErrors>,\r\n    isDisabled$: Observable<boolean>,\r\n    controlOptions?: IAbstractControlOptions<GValue, GErrors>,\r\n    updateOptions?: IControlUpdateOptions & { takeUntil$?: Observable<any> },\r\n  ): Subscription {\r\n    const takeUntil$ = controlOptions?.takeUntil$ || updateOptions?.takeUntil$;\r\n    if (!takeUntil$) {\r\n      throw getTakeUntilWasNotProvidedError(`disableWhile`);\r\n    }\r\n\r\n    return isDisabled$\r\n      .pipe(\r\n        takeUntil(takeUntil$),\r\n      )\r\n      .subscribe(isDisabled => ControlMethods.setIsDisabled(control, isDisabled, updateOptions));\r\n  }\r\n\r\n  static enableWhile<GValue, GErrors extends ValidationErrors>(\r\n    control: IAbstractControl<GValue, GErrors>,\r\n    isEnabled$: Observable<boolean>,\r\n    opts?: IControlUpdateOptions,\r\n  ): Subscription {\r\n    return isEnabled$.subscribe(isEnabled => ControlMethods.setIsEnabled(control, isEnabled, opts));\r\n  }\r\n\r\n  static hasError<GValue, GErrors extends ValidationErrors>(control: IAbstractControl<GValue, GErrors>, error: Extract<keyof GErrors, string>, path?: TControlPath): boolean {\r\n    return control.hasError(error, !path || path.length === 0 ? undefined : path);\r\n  }\r\n\r\n  static hasErrorAndDirty<GValue, GErrors extends ValidationErrors>(control: IAbstractControl<GValue, GErrors>, error: Extract<keyof GErrors, string>, path?: TControlPath): boolean {\r\n    return control.dirty && ControlMethods.hasError(control, error, path);\r\n  }\r\n\r\n  static getIsValidStream<GValue, GErrors>(control: IAbstractControl<GValue, GErrors>): Observable<boolean> {\r\n    return control.status$\r\n      .pipe(\r\n        map(() => control.valid),\r\n        distinctUntilChanged(),\r\n      );\r\n  }\r\n\r\n  static getIsInvalidStream<GValue, GErrors>(control: IAbstractControl<GValue, GErrors>): Observable<boolean> {\r\n    return control.status$\r\n      .pipe(\r\n        map(() => control.invalid),\r\n        distinctUntilChanged(),\r\n      );\r\n  }\r\n\r\n  static getErrorRefListStream<GValue, GErrors>(\r\n    control: IAbstractControl<GValue, GErrors>,\r\n    errorMsgMap?: { [key in keyof GErrors]: string | ((errorValue: GErrors[key]) => string) },\r\n  ): Observable<IControlErrorRef<GErrors>[]> {\r\n    return control.errors$\r\n      .pipe(\r\n        map((errors): IControlErrorRef<GErrors>[] => {\r\n          return _.map(errors, (errorData, errorKey): IControlErrorRef<GErrors> => {\r\n            return {\r\n              code: errorKey,\r\n              data: errorData,\r\n              msg: errorMsgMap?.[errorKey] !== undefined ? typeof errorMsgMap[errorKey] === 'string' ? errorMsgMap[errorKey] : errorMsgMap[errorKey](errorData) : 'Unknown error',\r\n            } as IControlErrorRef<GErrors>;\r\n          });\r\n        }),\r\n      );\r\n  }\r\n\r\n  static getFirstErrorMsgStream<GValue, GErrors>(\r\n    control: IAbstractControl<GValue, GErrors>,\r\n  ): Observable<string | null> {\r\n    return control.errorRefList$\r\n      .pipe(\r\n        map(errorRefList => errorRefList[0]?.msg ?? null),\r\n        distinctUntilChanged(),\r\n      );\r\n  }\r\n\r\n  static getAggregatedErrorRefListStream<GValue, GErrors>(\r\n    control: IAbstractControl<GValue, GErrors> & IControlsParent<GValue, GErrors>,\r\n  ): Observable<IControlErrorRef<GErrors>[]> {\r\n    return combineLatest([\r\n      control.errorRefList$,\r\n      ..._.map(control.controls, (ctrl: IAbstractControl | IAbstractControl & IControlsParent) => (ctrl as IControlsParent).aggregatedErrorRefList$ || ctrl.errorRefList$),\r\n    ])\r\n      .pipe(\r\n        map((errorRefList: IControlErrorRef<GErrors>[][]) => {\r\n          return _.flatMap(errorRefList);\r\n        }),\r\n      );\r\n  }\r\n\r\n  static getFirstAggregatedErrorMsgStream<GValue, GErrors>(\r\n    control: IAbstractControl<GValue, GErrors> & IControlsParent<GValue, GErrors>,\r\n  ): Observable<string | null> {\r\n    return control.aggregatedErrorRefList$\r\n      .pipe(\r\n        map(aggregatedErrorRefList => aggregatedErrorRefList[0]?.msg ?? null),\r\n      );\r\n  }\r\n\r\n  static getDisabledReasonList<GValue, GErrors>(\r\n    control: IAbstractControl<GValue, GErrors>,\r\n    disabledReasonConfigList?: OneOrMany<Observable<string | boolean>>,\r\n  ): Observable<string[]> {\r\n    if (!disabledReasonConfigList) {\r\n      return of([]);\r\n    }\r\n    const disabledReasonList$ = combineLatest(\r\n      _.map(toArray(disabledReasonConfigList), disabledReason$ => disabledReason$\r\n        .pipe(\r\n          map(disabledReason => disabledReason !== false ? disabledReason : null),\r\n        ),\r\n      ),\r\n    )\r\n      .pipe(\r\n        map((disabledReasonList: (string | null)[]): string[] => _.filter(disabledReasonList, isValueTruthy)),\r\n        startWith([]),\r\n        distinctUntilChanged(),\r\n      );\r\n\r\n    control.disableWhile(disabledReasonList$.pipe(map(reasonList => !_.isEmpty(reasonList))));\r\n\r\n    return disabledReasonList$;\r\n  }\r\n\r\n  static getFirstDisabledReasonStream<GValue, GErrors>(\r\n    control: IAbstractControl<GValue, GErrors>,\r\n  ): Observable<string | null> {\r\n    return control.disabledReasonList$\r\n      .pipe(\r\n        map(disabledReasonList => disabledReasonList?.[0] ?? null),\r\n        distinctUntilChanged(),\r\n      );\r\n  }\r\n\r\n  static getOptions<GValue, GErrors>(\r\n    validatorOrOpts?: ValidatorFn<GValue, GErrors> | ValidatorFn<GValue, GErrors>[] | null | IAbstractControlOptions<GValue, GErrors>,\r\n  ): IAbstractControlOptions<GValue, GErrors> | undefined {\r\n    if (!!validatorOrOpts && typeof validatorOrOpts === 'object' && !Array.isArray(validatorOrOpts)) {\r\n      return validatorOrOpts;\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  static getBaseConstructorSecondParam<GValue, GErrors>(\r\n    validatorOrOpts?: ValidatorFn<GValue, GErrors> | ValidatorFn<GValue, GErrors>[] | null | IAbstractControlOptions<GValue, GErrors>,\r\n  ): ValidatorFn | ValidatorFn[] | AbstractControlOptions | null {\r\n    if (!!validatorOrOpts && typeof validatorOrOpts === 'object' && !Array.isArray(validatorOrOpts)) {\r\n      return {\r\n        validators: (validatorOrOpts as IAbstractControlOptions)?.validators || undefined,\r\n        asyncValidators: (validatorOrOpts as IAbstractControlOptions)?.asyncValidators || undefined,\r\n      };\r\n    }\r\n    return validatorOrOpts || null;\r\n  }\r\n}\r\n","import { FormArray as NgFormArray } from '@angular/forms';\r\nimport {\r\n  Observable,\r\n  Subject,\r\n  Subscription,\r\n} from 'rxjs';\r\nimport {\r\n  distinctUntilChanged,\r\n  startWith,\r\n} from 'rxjs/operators';\r\nimport { ControlMethods } from './control-methods';\r\nimport {\r\n  AsyncValidatorFn,\r\n  IAbstractControlOptions,\r\n  IControlUpdateOptions,\r\n  TAbstractControlOf,\r\n  TControlPath,\r\n  TControlStatus,\r\n  TControlValue,\r\n  ValidationErrors,\r\n  ValidatorFn,\r\n  TAbstractControlParent,\r\n} from './types';\r\nimport {\r\n  IAbstractControl,\r\n  IControlErrorRef,\r\n  IControlsParent,\r\n} from './abstractControl';\r\nimport * as _ from 'lodash';\r\n\r\nexport interface IFormArrayOptions<GControlOrValue = any, GErrors extends ValidationErrors = ValidationErrors> {\r\n  controlFactory?: (value?: TControlValue<GControlOrValue>) => TAbstractControlOf<GControlOrValue>;\r\n}\r\n\r\nexport class FormArray<GControlOrValue = any, GErrors extends ValidationErrors = ValidationErrors, GParent extends TAbstractControlParent = any>\r\n  extends NgFormArray\r\n  implements IAbstractControl<TControlValue<GControlOrValue>[], GErrors, GParent>,\r\n             IControlsParent<TControlValue<GControlOrValue>[], GErrors> {\r\n  private readonly _touchChanges$ = new Subject<boolean>();\r\n  private readonly _dirtyChanges$ = new Subject<boolean>();\r\n  private readonly _errorsSubject$ = new Subject<Partial<GErrors> | null>();\r\n\r\n  private readonly _options: IAbstractControlOptions<TControlValue<GControlOrValue>[], GErrors> & IFormArrayOptions<GControlOrValue, GErrors> | undefined = ControlMethods.getOptions(this._validatorOrOpts);\r\n\r\n  controls: Array<TAbstractControlOf<GControlOrValue, FormArray<GControlOrValue, GErrors, GParent>>>;\r\n  readonly value: TControlValue<GControlOrValue>[];\r\n  readonly valueChanges: Observable<TControlValue<GControlOrValue>[]>;\r\n  readonly status: TControlStatus;\r\n  readonly statusChanges: Observable<TControlStatus>;\r\n  readonly errors: GErrors | null;\r\n\r\n  readonly isTouched$ = this._touchChanges$.asObservable()\r\n    .pipe(startWith(this.touched), distinctUntilChanged());\r\n  readonly isDirty$ = this._dirtyChanges$.asObservable()\r\n    .pipe(startWith(this.dirty), distinctUntilChanged());\r\n\r\n  readonly value$: Observable<TControlValue<GControlOrValue>[]> = ControlMethods.getValueStream<TControlValue<GControlOrValue>[], GErrors>(this);\r\n  readonly isDisabled$: Observable<boolean> = ControlMethods.getIsDisabledStream(this);\r\n  readonly isEnabled$: Observable<boolean> = ControlMethods.getIsEnabledStream(this);\r\n  readonly status$: Observable<TControlStatus> = ControlMethods.getStatusStream(this);\r\n  readonly errors$: Observable<Partial<GErrors> | null> = ControlMethods.getErrorStream<TControlValue<GControlOrValue>[], GErrors>(this, this._errorsSubject$.asObservable());\r\n  readonly errorRefList$: Observable<IControlErrorRef<GErrors>[]> = ControlMethods.getErrorRefListStream(this, this._options?.errorMsgMap);\r\n  readonly firstErrorMsg$: Observable<string | null> = ControlMethods.getFirstErrorMsgStream(this);\r\n  readonly aggregatedErrorRefList$: Observable<IControlErrorRef<GErrors>[]> = ControlMethods.getAggregatedErrorRefListStream(this);\r\n  readonly firstAggregatedErrorMsg$: Observable<string | null> = ControlMethods.getFirstAggregatedErrorMsgStream(this);\r\n  readonly disabledReasonList$: Observable<string[]> = ControlMethods.getDisabledReasonList(this, this._options?.disabledReason$List);\r\n  readonly firstDisabledReason$: Observable<string | null> = ControlMethods.getFirstDisabledReasonStream(this);\r\n  readonly isValid$: Observable<boolean> = ControlMethods.getIsValidStream(this);\r\n  readonly isValidAndDirty$: Observable<boolean> = ControlMethods.getIsValidAndDirtyStream(this);\r\n  readonly isInvalid$: Observable<boolean> = ControlMethods.getIsInvalidStream(this);\r\n\r\n  get asyncValidator(): AsyncValidatorFn<TControlValue<GControlOrValue>[], GErrors> | null {\r\n    return super.asyncValidator as AsyncValidatorFn<TControlValue<GControlOrValue>[], GErrors> | null;\r\n  }\r\n\r\n  set asyncValidator(asyncValidator: AsyncValidatorFn<TControlValue<GControlOrValue>[], GErrors> | null) {\r\n    super.asyncValidator = asyncValidator;\r\n  }\r\n\r\n  get validator(): ValidatorFn<TControlValue<GControlOrValue>[], GErrors> | null {\r\n    return super.validator as ValidatorFn<TControlValue<GControlOrValue>[], GErrors> | null;\r\n  }\r\n\r\n  set validator(validator: ValidatorFn<TControlValue<GControlOrValue>[], GErrors> | null) {\r\n    super.validator = validator;\r\n  }\r\n\r\n  get parent(): GParent | null {\r\n    return super.parent as GParent;\r\n  }\r\n\r\n  constructor(\r\n    controls?: Array<TAbstractControlOf<GControlOrValue, FormArray<GControlOrValue, GErrors, GParent>>>,\r\n    options?: IAbstractControlOptions<TControlValue<GControlOrValue>[], GErrors> & IFormArrayOptions<GControlOrValue, GErrors>,\r\n  );\r\n  /**\r\n   * @Deprecated\r\n   * Please use options as a second parameter, left for backward compatibility only\r\n   * */\r\n  constructor(\r\n    controls?: Array<TAbstractControlOf<GControlOrValue, FormArray<GControlOrValue, GErrors, GParent>>>,\r\n    validators?: ValidatorFn<TControlValue<GControlOrValue>[], GErrors> | ValidatorFn<TControlValue<GControlOrValue>[], GErrors>[] | null,\r\n    asyncValidator?: AsyncValidatorFn<TControlValue<GControlOrValue>[], GErrors> | AsyncValidatorFn<TControlValue<GControlOrValue>[], GErrors>[] | null,\r\n  );\r\n  constructor(\r\n    controls: Array<TAbstractControlOf<GControlOrValue, FormArray<GControlOrValue, GErrors, GParent>>>,\r\n    private readonly _validatorOrOpts?: ValidatorFn<TControlValue<GControlOrValue>[], GErrors> |\r\n      ValidatorFn<TControlValue<GControlOrValue>[], GErrors>[] |\r\n      null |\r\n      IAbstractControlOptions<TControlValue<GControlOrValue>[], GErrors> & IFormArrayOptions<GControlOrValue, GErrors>,\r\n    asyncValidator?: AsyncValidatorFn | AsyncValidatorFn[] | null,\r\n  ) {\r\n    super(\r\n      controls,\r\n      ControlMethods.getBaseConstructorSecondParam<TControlValue<GControlOrValue>[], GErrors>(_validatorOrOpts),\r\n      asyncValidator,\r\n    );\r\n  }\r\n\r\n  private _setControlsFromValue(value?: TControlValue<GControlOrValue>[]): void {\r\n    const currentControlsLength: number = this.controls.length;\r\n    const newControlsLength: number = (value || []).length;\r\n\r\n    const controlLengthDiff: number = currentControlsLength - newControlsLength;\r\n    if (controlLengthDiff > 0) {\r\n      _.times(controlLengthDiff, () => {\r\n        this.removeAt(0);\r\n      });\r\n    } else if (controlLengthDiff < 0) {\r\n      let controlsToAdd = -controlLengthDiff;\r\n      const controlFactory: ((_value?: TControlValue<GControlOrValue>) => TAbstractControlOf<GControlOrValue>) | undefined = this._options?.controlFactory;\r\n      if (controlFactory) {\r\n        while (controlsToAdd) {\r\n          const valueIndex: number = newControlsLength - controlsToAdd;\r\n          controlsToAdd--;\r\n          this.push(controlFactory(value![valueIndex]!));\r\n        }\r\n      } else {\r\n        throw new Error(`controlFactory was not provided`);\r\n      }\r\n    }\r\n  }\r\n\r\n  getRawValue(): TControlValue<GControlOrValue>[] {\r\n    return super.getRawValue();\r\n  }\r\n\r\n  at(index: number): TAbstractControlOf<GControlOrValue> {\r\n    return super.at(index) as TAbstractControlOf<GControlOrValue>;\r\n  }\r\n\r\n  setValue(\r\n    value: TControlValue<GControlOrValue>[],\r\n    options?: Pick<IControlUpdateOptions, 'emitEvent' | 'onlySelf'>,\r\n  ): void {\r\n    try {\r\n      this._setControlsFromValue(value);\r\n    } catch (e) {\r\n      throw new Error(`FormArray#setValue: ${(e as Error).message}`);\r\n    }\r\n\r\n    super.setValue(value, options);\r\n  }\r\n\r\n  /**\r\n   * @deprecated\r\n   * Preffered to use setValue instead as patchValue delivers unexpected results\r\n   * */\r\n  patchValue(\r\n    value: Partial<TControlValue<GControlOrValue>>[],\r\n    options?: Pick<IControlUpdateOptions, 'emitEvent' | 'onlySelf'>,\r\n  ): void {\r\n    super.patchValue(value as GControlOrValue[], options);\r\n  }\r\n\r\n  push(control: TAbstractControlOf<GControlOrValue>): void {\r\n    return super.push(control);\r\n  }\r\n\r\n  pushValue(value: TControlValue<GControlOrValue>): void {\r\n    if (!this._options?.controlFactory) {\r\n      throw new Error(`FormArray#pushValue: controlFactory was not provided`);\r\n    }\r\n    const control = this._options.controlFactory(value);\r\n    control.reset(value);\r\n    this.push(control);\r\n  }\r\n\r\n  insert(index: number, control: TAbstractControlOf<GControlOrValue>): void {\r\n    return super.insert(index, control);\r\n  }\r\n\r\n  setControl(index: number, control: TAbstractControlOf<GControlOrValue>): void {\r\n    return super.setControl(index, control);\r\n  }\r\n\r\n  /**\r\n   * To use this function you must supply takeUntil$ in the constructor options\r\n   * */\r\n  disableWhile(observable: Observable<boolean>, options?: IControlUpdateOptions): Subscription {\r\n    return ControlMethods.disableWhile(this, observable, this._options, options);\r\n  }\r\n\r\n  markAsTouched(opts?: Pick<IControlUpdateOptions, 'onlySelf'>): void {\r\n    super.markAsTouched(opts);\r\n    this._touchChanges$.next(true);\r\n  }\r\n\r\n  markAsUntouched(opts?: Pick<IControlUpdateOptions, 'onlySelf'>): void {\r\n    super.markAsUntouched(opts);\r\n    this._touchChanges$.next(false);\r\n  }\r\n\r\n  markAsPristine(opts?: Pick<IControlUpdateOptions, 'onlySelf'>): void {\r\n    super.markAsPristine(opts);\r\n    this._dirtyChanges$.next(false);\r\n  }\r\n\r\n  markAsDirty(opts?: Pick<IControlUpdateOptions, 'onlySelf'>): void {\r\n    super.markAsDirty(opts);\r\n    this._dirtyChanges$.next(true);\r\n  }\r\n\r\n  reset(value?: TControlValue<GControlOrValue>[], options?: Pick<IControlUpdateOptions, 'emitEvent' | 'onlySelf'>): void {\r\n    try {\r\n      this._setControlsFromValue(value);\r\n    } catch (e) {\r\n      throw new Error(`FormArray#reset: ${(e as Error).message}`);\r\n    }\r\n\r\n    super.reset(value, options);\r\n  }\r\n\r\n  setValidators(newValidator: ValidatorFn<TControlValue<GControlOrValue>[], GErrors> | ValidatorFn<TControlValue<GControlOrValue>[], GErrors>[]): void {\r\n    super.setValidators(newValidator);\r\n    super.updateValueAndValidity();\r\n  }\r\n\r\n  setAsyncValidators(newValidator: AsyncValidatorFn<TControlValue<GControlOrValue>[], GErrors> | AsyncValidatorFn<TControlValue<GControlOrValue>[], GErrors>[] | null): void {\r\n    super.setAsyncValidators(newValidator);\r\n    super.updateValueAndValidity();\r\n  }\r\n\r\n  hasError(errorCode: Extract<keyof GErrors, string>, path?: TControlPath): boolean {\r\n    return super.hasError(errorCode, path);\r\n  }\r\n\r\n  async setErrors(errors: Partial<GErrors> | null, opts: Pick<IControlUpdateOptions, 'emitEvent'> = {}): Promise<void> {\r\n    await ControlMethods.setErrors(this, () => {\r\n      return this._errorsSubject$;\r\n    }, errors, opts);\r\n  }\r\n\r\n  getError<K extends Extract<keyof GErrors, string>>(errorCode: K, path?: TControlPath): GErrors[K] | null {\r\n    return super.getError(errorCode, path) as GErrors[K] | null;\r\n  }\r\n\r\n  hasErrorAndDirty(errorCode: Extract<keyof GErrors, string>, path?: TControlPath): boolean {\r\n    return ControlMethods.hasErrorAndDirty(this, errorCode, path);\r\n  }\r\n\r\n  setIsEnabled(enable = true, opts?: Pick<IControlUpdateOptions, 'emitEvent' | 'onlySelf'>): void {\r\n    return ControlMethods.setIsEnabled(this, enable, opts);\r\n  }\r\n\r\n  setIsDisabled(disable = true, opts?: Pick<IControlUpdateOptions, 'emitEvent' | 'onlySelf'>): void {\r\n    return ControlMethods.setIsDisabled(this, disable, opts);\r\n  }\r\n\r\n  remove(value: TControlValue<GControlOrValue>): void {\r\n    for (let i = this.length - 1; i >= 0; --i) {\r\n      if (this.at(i).value === value) {\r\n        this.removeAt(i);\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { FormControl as NgFormControl } from '@angular/forms';\r\nimport {\r\n  Observable,\r\n  Subject,\r\n  Subscription,\r\n} from 'rxjs';\r\nimport {\r\n  distinctUntilChanged,\r\n  startWith,\r\n} from 'rxjs/operators';\r\nimport { ControlMethods } from './control-methods';\r\nimport {\r\n  AsyncValidatorFn,\r\n  IAbstractControlOptions,\r\n  IControlUpdateOptions,\r\n  TControlStatus,\r\n  TControlValueState,\r\n  ValidationErrors,\r\n  ValidatorFn,\r\n  TAbstractControlParent,\r\n} from './types';\r\nimport {\r\n  IAbstractControl,\r\n  IControlErrorRef,\r\n} from './abstractControl';\r\n\r\nexport class FormControl<GValue = any, GErrors extends ValidationErrors = any, GParent extends TAbstractControlParent = any> extends NgFormControl implements IAbstractControl<GValue, GErrors, GParent> {\r\n  private readonly _touchChanges$ = new Subject<boolean>();\r\n  private readonly _dirtyChanges$ = new Subject<boolean>();\r\n  private readonly _errorsSubject$ = new Subject<Partial<GErrors> | null>();\r\n  private readonly _options: IAbstractControlOptions<GValue, GErrors> | undefined = ControlMethods.getOptions<GValue, GErrors>(this._validatorOrOpts);\r\n\r\n  readonly value: GValue;\r\n  readonly errors: GErrors | null;\r\n  readonly valueChanges: Observable<GValue>;\r\n  readonly status: TControlStatus;\r\n  readonly statusChanges: Observable<TControlStatus>;\r\n\r\n  readonly isTouched$: Observable<boolean> = this._touchChanges$.asObservable()\r\n    .pipe(startWith(this.touched), distinctUntilChanged());\r\n  readonly isDirty$: Observable<boolean> = this._dirtyChanges$.asObservable()\r\n    .pipe(startWith(this.dirty), distinctUntilChanged());\r\n\r\n  readonly value$: Observable<GValue> = ControlMethods.getValueStream<GValue, GErrors>(this);\r\n  readonly isDisabled$: Observable<boolean> = ControlMethods.getIsDisabledStream<GValue, GErrors>(this);\r\n  readonly isEnabled$: Observable<boolean> = ControlMethods.getIsEnabledStream<GValue, GErrors>(this);\r\n  readonly status$: Observable<TControlStatus> = ControlMethods.getStatusStream<GValue, GErrors>(this);\r\n  readonly errors$: Observable<Partial<GErrors> | null> = ControlMethods.getErrorStream<GValue, GErrors>(this, this._errorsSubject$.asObservable());\r\n  readonly isValid$: Observable<boolean> = ControlMethods.getIsValidStream<GValue, GErrors>(this);\r\n  readonly isValidAndDirty$: Observable<boolean> = ControlMethods.getIsValidAndDirtyStream(this);\r\n  readonly isInvalid$: Observable<boolean> = ControlMethods.getIsInvalidStream<GValue, GErrors>(this);\r\n  readonly errorRefList$: Observable<IControlErrorRef<GErrors>[]> = ControlMethods.getErrorRefListStream<GValue, GErrors>(this, this._options?.errorMsgMap);\r\n  readonly firstErrorMsg$: Observable<string | null> = ControlMethods.getFirstErrorMsgStream(this);\r\n  readonly disabledReasonList$: Observable<string[]> = ControlMethods.getDisabledReasonList(this, this._options?.disabledReason$List);\r\n  readonly firstDisabledReason$: Observable<string | null> = ControlMethods.getFirstDisabledReasonStream(this);\r\n\r\n  get asyncValidator(): AsyncValidatorFn<GValue, GErrors> | null {\r\n    return super.asyncValidator as AsyncValidatorFn<GValue, GErrors> | null;\r\n  }\r\n\r\n  set asyncValidator(asyncValidator: AsyncValidatorFn<GValue, GErrors> | null) {\r\n    super.asyncValidator = asyncValidator;\r\n  }\r\n\r\n  get validator(): ValidatorFn<GValue, GErrors> | null {\r\n    return super.validator as ValidatorFn<GValue, GErrors> | null;\r\n  }\r\n\r\n  set validator(validator: ValidatorFn<GValue, GErrors> | null) {\r\n    super.validator = validator;\r\n  }\r\n\r\n  get parent(): GParent | null {\r\n    return super.parent as GParent;\r\n  }\r\n\r\n  constructor(\r\n    formState?: TControlValueState<GValue>,\r\n    options?: IAbstractControlOptions<GValue, GErrors>,\r\n  );\r\n  /**\r\n   * @Deprecated\r\n   * Please use options as a second parameter, left for backward compatibility only\r\n   * */\r\n  constructor(\r\n    formState?: TControlValueState<GValue>,\r\n    validators?: ValidatorFn<GValue, GErrors> | ValidatorFn<GValue, GErrors>[] | null,\r\n    asyncValidator?: AsyncValidatorFn<GValue, GErrors> | AsyncValidatorFn<GValue, GErrors>[] | null,\r\n  );\r\n  constructor(\r\n    formState?: TControlValueState<GValue>,\r\n    private readonly _validatorOrOpts?: ValidatorFn<GValue, GErrors> | ValidatorFn<GValue, GErrors>[] | null | IAbstractControlOptions<GValue, GErrors>,\r\n    asyncValidator?: AsyncValidatorFn<GValue, GErrors> | AsyncValidatorFn<GValue, GErrors>[] | null,\r\n  ) {\r\n    super(\r\n      formState,\r\n      ControlMethods.getBaseConstructorSecondParam(_validatorOrOpts),\r\n      asyncValidator,\r\n    );\r\n  }\r\n\r\n  setValue(valueOrObservable: GValue, options?: IControlUpdateOptions): void {\r\n    super.setValue(valueOrObservable, options);\r\n  }\r\n\r\n  patchValue(value: GValue, options?: IControlUpdateOptions): void {\r\n    super.patchValue(value, options);\r\n  }\r\n\r\n  /**\r\n   * To use this function you must supply takeUntil$ in the constructor options\r\n   * */\r\n  disableWhile(observable: Observable<boolean>, options?: IControlUpdateOptions & { takeUntil$?: Observable<any> }): Subscription {\r\n    return ControlMethods.disableWhile(this, observable, this._options, options);\r\n  }\r\n\r\n  markAsTouched(opts?: Pick<IControlUpdateOptions, 'onlySelf'>): void {\r\n    super.markAsTouched(opts);\r\n    this._touchChanges$.next(true);\r\n  }\r\n\r\n  markAsUntouched(opts?: Pick<IControlUpdateOptions, 'onlySelf'>): void {\r\n    super.markAsUntouched(opts);\r\n    this._touchChanges$.next(false);\r\n  }\r\n\r\n  markAsPristine(opts?: Pick<IControlUpdateOptions, 'onlySelf'>): void {\r\n    super.markAsPristine(opts);\r\n    this._dirtyChanges$.next(false);\r\n  }\r\n\r\n  markAsDirty(opts?: Pick<IControlUpdateOptions, 'onlySelf'>): void {\r\n    super.markAsDirty(opts);\r\n    this._dirtyChanges$.next(true);\r\n  }\r\n\r\n  reset(formState?: TControlValueState<GValue>, options?: Pick<IControlUpdateOptions, 'emitEvent' | 'onlySelf'>): void {\r\n    super.reset(formState, options);\r\n  }\r\n\r\n  setValidators(newValidator: ValidatorFn<GValue, GErrors> | ValidatorFn<GValue, GErrors>[] | null): void {\r\n    super.setValidators(newValidator);\r\n    super.updateValueAndValidity();\r\n  }\r\n\r\n  setAsyncValidators(newValidator: AsyncValidatorFn<GValue, GErrors> | AsyncValidatorFn<GValue, GErrors>[] | null): void {\r\n    super.setAsyncValidators(newValidator);\r\n    super.updateValueAndValidity();\r\n  }\r\n\r\n  getError<K extends Extract<keyof GErrors, string>>(errorCode: K): GErrors[K] | null {\r\n    return super.getError(errorCode) as GErrors[K] | null;\r\n  }\r\n\r\n  hasError<K extends Extract<keyof GErrors, string>>(errorCode: K): boolean {\r\n    return super.hasError(errorCode);\r\n  }\r\n\r\n  async setErrors(errors: Partial<GErrors> | null, opts: Pick<IControlUpdateOptions, 'emitEvent'> = {}): Promise<void> {\r\n    await ControlMethods.setErrors(this, () => {\r\n      return this._errorsSubject$;\r\n    }, errors, opts);\r\n  }\r\n\r\n  hasErrorAndDirty(error: Extract<keyof GErrors, string>): boolean {\r\n    return ControlMethods.hasErrorAndDirty(this, error);\r\n  }\r\n\r\n  setIsEnabled(enable = true, opts?: Pick<IControlUpdateOptions, 'emitEvent' | 'onlySelf'>): void {\r\n    ControlMethods.setIsEnabled(this, enable, opts);\r\n  }\r\n\r\n  setIsDisabled(disable = true, opts?: Pick<IControlUpdateOptions, 'emitEvent' | 'onlySelf'>): void {\r\n    ControlMethods.setIsDisabled(this, disable, opts);\r\n  }\r\n}\r\n","import { FormGroup as NgFormGroup } from '@angular/forms';\r\nimport {\r\n  Observable,\r\n  Subject,\r\n  Subscription,\r\n} from 'rxjs';\r\nimport {\r\n  distinctUntilChanged,\r\n  startWith,\r\n} from 'rxjs/operators';\r\nimport { ControlMethods } from './control-methods';\r\nimport {\r\n  AsyncValidatorFn,\r\n  IAbstractControlOptions,\r\n  IControlsValue,\r\n  IControlUpdateOptions,\r\n  TAbstractControlsOf,\r\n  TControlStatus,\r\n  TControlValueState,\r\n  ValidationErrors,\r\n  ValidatorFn,\r\n  TAbstractControlParent,\r\n} from './types';\r\nimport {\r\n  IAbstractControl,\r\n  IControlErrorRef,\r\n  IControlsParent,\r\n} from './abstractControl';\r\nimport * as _ from 'lodash';\r\n\r\nexport class FormGroup<GControlsOrValue extends { [p: string]: any } = { [p: string]: any }, GErrors extends ValidationErrors = ValidationErrors, GParent extends TAbstractControlParent = any>\r\n  extends NgFormGroup implements IAbstractControl<IControlsValue<GControlsOrValue>, GErrors, GParent>, IControlsParent<IControlsValue<GControlsOrValue>, GErrors> {\r\n\r\n  private readonly _touchChanges$ = new Subject<boolean>();\r\n  private readonly _dirtyChanges$ = new Subject<boolean>();\r\n  private readonly _errorsSubject$ = new Subject<Partial<GErrors> | null>();\r\n\r\n  private readonly _options: IAbstractControlOptions<IControlsValue<GControlsOrValue>, GErrors> | undefined = ControlMethods.getOptions(this._validatorOrOpts);\r\n\r\n  get asyncValidator(): AsyncValidatorFn<IControlsValue<GControlsOrValue>, GErrors> | null {\r\n    return super.asyncValidator as AsyncValidatorFn<IControlsValue<GControlsOrValue>, GErrors> | null;\r\n  }\r\n\r\n  set asyncValidator(asyncValidator: AsyncValidatorFn<IControlsValue<GControlsOrValue>, GErrors> | null) {\r\n    super.asyncValidator = asyncValidator;\r\n  }\r\n\r\n  get validator(): ValidatorFn<IControlsValue<GControlsOrValue>, GErrors> | null {\r\n    return super.validator as ValidatorFn<IControlsValue<GControlsOrValue>, GErrors> | null;\r\n  }\r\n\r\n  set validator(validator: ValidatorFn<IControlsValue<GControlsOrValue>, GErrors> | null) {\r\n    super.validator = validator;\r\n  }\r\n\r\n  get parent(): GParent | null {\r\n    return super.parent as GParent;\r\n  }\r\n\r\n  controls: TAbstractControlsOf<GControlsOrValue, GErrors>;\r\n  readonly value: IControlsValue<GControlsOrValue>;\r\n  readonly errors: GErrors | null;\r\n  readonly valueChanges: Observable<IControlsValue<GControlsOrValue>>;\r\n  readonly status: TControlStatus;\r\n\r\n  readonly statusChanges: Observable<TControlStatus>;\r\n\r\n  readonly isTouched$ = this._touchChanges$.asObservable()\r\n    .pipe(startWith(this.touched), distinctUntilChanged());\r\n  readonly isDirty$ = this._dirtyChanges$.asObservable()\r\n    .pipe(startWith(this.dirty), distinctUntilChanged());\r\n\r\n  readonly value$: Observable<IControlsValue<GControlsOrValue>> = ControlMethods.getValueStream(this);\r\n  readonly isDisabled$: Observable<boolean> = ControlMethods.getIsDisabledStream(this);\r\n  readonly isEnabled$: Observable<boolean> = ControlMethods.getIsEnabledStream(this);\r\n  readonly status$: Observable<TControlStatus> = ControlMethods.getStatusStream(this);\r\n  readonly errors$: Observable<Partial<GErrors> | null> = ControlMethods.getErrorStream(this, this._errorsSubject$.asObservable());\r\n  readonly errorRefList$: Observable<IControlErrorRef<GErrors>[]> = ControlMethods.getErrorRefListStream(this, this._options?.errorMsgMap);\r\n  readonly firstErrorMsg$: Observable<string | null> = ControlMethods.getFirstErrorMsgStream(this);\r\n  readonly aggregatedErrorRefList$: Observable<IControlErrorRef<GErrors>[]> = ControlMethods.getAggregatedErrorRefListStream(this);\r\n  readonly firstAggregatedErrorMsg$: Observable<string | null> = ControlMethods.getFirstAggregatedErrorMsgStream(this);\r\n  readonly disabledReasonList$: Observable<string[]> = ControlMethods.getDisabledReasonList(this, this._options?.disabledReason$List);\r\n  readonly firstDisabledReason$: Observable<string | null> = ControlMethods.getFirstDisabledReasonStream(this);\r\n  readonly isValid$: Observable<boolean> = ControlMethods.getIsValidStream(this);\r\n  readonly isValidAndDirty$: Observable<boolean> = ControlMethods.getIsValidAndDirtyStream(this);\r\n  readonly isInvalid$: Observable<boolean> = ControlMethods.getIsInvalidStream(this);\r\n\r\n  constructor(\r\n    controls: TAbstractControlsOf<GControlsOrValue, GErrors>,\r\n    options?: IAbstractControlOptions<IControlsValue<GControlsOrValue>, GErrors>,\r\n  );\r\n  /**\r\n   * @Deprecated\r\n   * Please use options as a second parameter, left for backward compatibility only\r\n   * */\r\n  constructor(\r\n    controls: TAbstractControlsOf<GControlsOrValue, GErrors>,\r\n    validators?: ValidatorFn<IControlsValue<GControlsOrValue>, GErrors> | ValidatorFn<IControlsValue<GControlsOrValue>, GErrors>[] | null,\r\n    asyncValidator?: AsyncValidatorFn<IControlsValue<GControlsOrValue>, GErrors> | AsyncValidatorFn<IControlsValue<GControlsOrValue>, GErrors>[] | null,\r\n  );\r\n  constructor(\r\n    controls: TAbstractControlsOf<GControlsOrValue, GErrors>,\r\n    private readonly _validatorOrOpts?: ValidatorFn<IControlsValue<GControlsOrValue>, GErrors> | ValidatorFn<IControlsValue<GControlsOrValue>, GErrors>[] | null | IAbstractControlOptions<IControlsValue<GControlsOrValue>, GErrors>,\r\n    asyncValidator?: AsyncValidatorFn<IControlsValue<GControlsOrValue>, GErrors> | AsyncValidatorFn<IControlsValue<GControlsOrValue>, GErrors>[] | null,\r\n  ) {\r\n    super(\r\n      controls,\r\n      ControlMethods.getBaseConstructorSecondParam(_validatorOrOpts),\r\n      asyncValidator || null,\r\n    );\r\n  }\r\n\r\n  getRawValue(): IControlsValue<GControlsOrValue> {\r\n    return super.getRawValue();\r\n  }\r\n\r\n  addControl<K extends Extract<keyof GControlsOrValue, string>>(name: K, control: TAbstractControlsOf<GControlsOrValue, GErrors>[K]): void {\r\n    super.addControl(name, control);\r\n  }\r\n\r\n  removeControl(name: Extract<keyof GControlsOrValue, string>): void {\r\n    super.removeControl(name);\r\n  }\r\n\r\n  contains(controlName: Extract<keyof GControlsOrValue, string>): boolean {\r\n    return super.contains(controlName);\r\n  }\r\n\r\n  setControl<K extends Extract<keyof GControlsOrValue, string>>(name: K, control: TAbstractControlsOf<GControlsOrValue, GErrors>[K]): void {\r\n    super.setControl(name, control);\r\n  }\r\n\r\n  setValue(\r\n    value: IControlsValue<GControlsOrValue>,\r\n    options?: Pick<IControlUpdateOptions, 'emitEvent' | 'onlySelf'>,\r\n  ): void {\r\n    const normalizedValue: { [p in keyof this['controls']]: any } = value ?? _.mapValues(this.controls, () => null);\r\n    super.setValue(normalizedValue, options);\r\n  }\r\n\r\n  patchValue(\r\n    valueOrObservable: Partial<IControlsValue<GControlsOrValue>>,\r\n    options?: Pick<IControlUpdateOptions, 'emitEvent' | 'onlySelf'>,\r\n  ): void {\r\n    super.patchValue(valueOrObservable, options);\r\n  }\r\n\r\n  /**\r\n   * To use this function you must supply takeUntil$ in the constructor options\r\n   * */\r\n  disableWhile(observable: Observable<boolean>, options?: IControlUpdateOptions & { takeUntil$: Observable<any> }): Subscription {\r\n    return ControlMethods.disableWhile(this, observable, this._options, options);\r\n  }\r\n\r\n  markAsTouched(opts?: Pick<IControlUpdateOptions, 'onlySelf'>): void {\r\n    super.markAsTouched(opts);\r\n    this._touchChanges$.next(true);\r\n  }\r\n\r\n  markAsUntouched(opts?: Pick<IControlUpdateOptions, 'onlySelf'>): void {\r\n    super.markAsUntouched(opts);\r\n    this._touchChanges$.next(false);\r\n  }\r\n\r\n  markAsPristine(opts?: Pick<IControlUpdateOptions, 'onlySelf'>): void {\r\n    super.markAsPristine(opts);\r\n    this._dirtyChanges$.next(false);\r\n  }\r\n\r\n  markAsDirty(opts?: Pick<IControlUpdateOptions, 'onlySelf'>): void {\r\n    super.markAsDirty(opts);\r\n    this._dirtyChanges$.next(true);\r\n  }\r\n\r\n  reset(formState?: TControlValueState<IControlsValue<GControlsOrValue>>, options?: Pick<IControlUpdateOptions, 'emitEvent' | 'onlySelf'>): void {\r\n    super.reset(formState, options);\r\n  }\r\n\r\n  setValidators(newValidator: ValidatorFn<IControlsValue<GControlsOrValue>, GErrors> | ValidatorFn<IControlsValue<GControlsOrValue>, GErrors>[]): void {\r\n    super.setValidators(newValidator);\r\n    super.updateValueAndValidity();\r\n  }\r\n\r\n  setAsyncValidators(newValidator: AsyncValidatorFn<IControlsValue<GControlsOrValue>, GErrors> | AsyncValidatorFn<IControlsValue<GControlsOrValue>, GErrors>[] | null): void {\r\n    super.setAsyncValidators(newValidator);\r\n    super.updateValueAndValidity();\r\n  }\r\n\r\n  hasError<K1 extends keyof IControlsValue<GControlsOrValue>>(errorCode: Extract<keyof GErrors, string>, path?: [K1]): boolean;\r\n  hasError<K1 extends keyof IControlsValue<GControlsOrValue>, K2 extends keyof IControlsValue<GControlsOrValue>[K1]>(\r\n    errorCode: Extract<keyof GErrors, string>,\r\n    path?: [K1, K2],\r\n  ): boolean;\r\n  hasError<K1 extends keyof IControlsValue<GControlsOrValue>,\r\n    K2 extends keyof IControlsValue<GControlsOrValue>[K1],\r\n    K3 extends keyof IControlsValue<GControlsOrValue>[K1][K2]>(errorCode: Extract<keyof GErrors, string>, path?: [K1, K2, K3]): boolean;\r\n  hasError(errorCode: Extract<keyof GErrors, string>, path?: string): boolean;\r\n  hasError(errorCode: Extract<keyof GErrors, string>, path?: any): boolean {\r\n    return super.hasError(errorCode, path);\r\n  }\r\n\r\n  async setErrors(errors: Partial<GErrors> | null, opts: Pick<IControlUpdateOptions, 'emitEvent'> = {}): Promise<void> {\r\n    await ControlMethods.setErrors(this, () => {\r\n      return this._errorsSubject$;\r\n    }, errors, opts);\r\n  }\r\n\r\n  getError<K extends keyof GErrors, K1 extends keyof IControlsValue<GControlsOrValue>>(errorCode: K, path?: [K1]): GErrors[K] | null;\r\n  getError<K extends keyof GErrors, K1 extends keyof IControlsValue<GControlsOrValue>, K2 extends keyof IControlsValue<GControlsOrValue>[K1]>(\r\n    errorCode: K,\r\n    path?: [K1, K2],\r\n  ): GErrors[K] | null;\r\n  getError<K extends keyof GErrors,\r\n    K1 extends keyof IControlsValue<GControlsOrValue>,\r\n    K2 extends keyof IControlsValue<GControlsOrValue>[K1],\r\n    K3 extends keyof IControlsValue<GControlsOrValue>[K1][K2]>(errorCode: K, path?: [K1, K2, K3]): GErrors[K] | null;\r\n  getError<K extends keyof GErrors>(errorCode: K, path?: string): GErrors[K] | null;\r\n  getError<K extends keyof GErrors>(errorCode: K, path?: any): GErrors[K] | null {\r\n    return super.getError(errorCode as any, path) as GErrors[K] | null;\r\n  }\r\n\r\n  hasErrorAndDirty<P1 extends keyof IControlsValue<GControlsOrValue>>(error: Extract<keyof GErrors, string>, prop1?: P1): boolean;\r\n  hasErrorAndDirty<P1 extends keyof IControlsValue<GControlsOrValue>, P2 extends keyof IControlsValue<GControlsOrValue>[P1]>(\r\n    error: Extract<keyof GErrors, string>,\r\n    prop1?: P1,\r\n    prop2?: P2,\r\n  ): boolean;\r\n  hasErrorAndDirty<P1 extends keyof IControlsValue<GControlsOrValue>,\r\n    P2 extends keyof IControlsValue<GControlsOrValue>[P1],\r\n    P3 extends keyof IControlsValue<GControlsOrValue>[P1][P2]>(error: Extract<keyof GErrors, string>, prop1?: P1, prop2?: P2, prop3?: P3): boolean;\r\n  hasErrorAndDirty<P1 extends keyof IControlsValue<GControlsOrValue>,\r\n    P2 extends keyof IControlsValue<GControlsOrValue>[P1],\r\n    P3 extends keyof IControlsValue<GControlsOrValue>[P1][P2],\r\n    P4 extends keyof IControlsValue<GControlsOrValue>[P1][P2][P3]>(error: Extract<keyof GErrors, string>, prop1?: P1, prop2?: P2, prop3?: P3, prop4?: P4): boolean;\r\n  hasErrorAndDirty(error: any, ...path: any): boolean {\r\n    return ControlMethods.hasErrorAndDirty(this, error, ...path);\r\n  }\r\n\r\n  setIsEnabled(enable = true, opts?: Pick<IControlUpdateOptions, 'emitEvent' | 'onlySelf'>): void {\r\n    ControlMethods.setIsEnabled(this, enable, opts);\r\n  }\r\n\r\n  setIsDisabled(disable = true, opts?: Pick<IControlUpdateOptions, 'emitEvent' | 'onlySelf'>): void {\r\n    ControlMethods.setIsDisabled(this, disable, opts);\r\n  }\r\n}\r\n","export { IAbstractControl } from './abstractControl';\r\nexport { FormControl } from './formControl';\r\nexport { FormGroup } from './formGroup';\r\nexport * from './formArray';\r\nexport {\r\n  ValidatorFn,\r\n  AsyncValidatorFn,\r\n  NgValidatorsErrors,\r\n  TFlatControlsOf,\r\n  TControlsOf,\r\n} from './types';\r\nexport { ControlValueAccessor } from './ControlValueAccessor';\r\nexport * from './types';\r\n","export default \":host {\\n  width: 40px;\\n  height: 40px;\\n  border-radius: 4px;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n}\\n:host.--focused {\\n  border: 4px solid #c6ddff;\\n}\\n:host.--wrong {\\n  color: var(--ion-color-danger);\\n}\\n.no-answer {\\n  opacity: 0.7;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFuc3dlci1pbmRpY2F0aW9uLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBO0VBQ0UsV0FBQTtFQUNBLFlBQUE7RUFDQSxrQkFBQTtFQUNBLGFBQUE7RUFDQSx1QkFBQTtFQUNBLG1CQUFBO0FBREY7QUFHRTtFQUNFLHlCQUFBO0FBREo7QUFJRTtFQUNFLDhCQUFBO0FBRko7QUFNQTtFQUNFLFlBQUE7QUFIRiIsImZpbGUiOiJhbnN3ZXItaW5kaWNhdGlvbi5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgJ21haW4nO1xyXG5cclxuOmhvc3Qge1xyXG4gIHdpZHRoOiA1ICogJHVuaXQ7XHJcbiAgaGVpZ2h0OiA1ICogJHVuaXQ7XHJcbiAgYm9yZGVyLXJhZGl1czogNHB4O1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuXHJcbiAgJi4tLWZvY3VzZWQge1xyXG4gICAgYm9yZGVyOiA0cHggc29saWQgI2M2ZGRmZjtcclxuICB9XHJcblxyXG4gICYuLS13cm9uZyB7XHJcbiAgICBjb2xvcjogdmFyKC0taW9uLWNvbG9yLWRhbmdlcik7XHJcbiAgfVxyXG59XHJcblxyXG4ubm8tYW5zd2VyIHtcclxuICBvcGFjaXR5OiAwLjc7XHJcbn1cclxuIl19 */\";","export default \".exercise-explanation__content {\\n  flex-grow: 1;\\n  margin-bottom: 16px;\\n}\\n\\nion-content::part(scroll) {\\n  display: flex;\\n  flex-direction: column;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImV4ZXJjaXNlLWV4cGxhbmF0aW9uLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFHRTtFQUNFLFlBQUE7RUFDQSxtQkFBQTtBQUZKOztBQU9FO0VBQ0UsYUFBQTtFQUNBLHNCQUFBO0FBSkoiLCJmaWxlIjoiZXhlcmNpc2UtZXhwbGFuYXRpb24ucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQHVzZSAnbWFpbicgYXMgKjtcclxuXHJcbi5leGVyY2lzZS1leHBsYW5hdGlvbiB7XHJcbiAgJl9fY29udGVudCB7XHJcbiAgICBmbGV4LWdyb3c6IDE7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAyICogJHVuaXQ7XHJcbiAgfVxyXG59XHJcblxyXG5pb24tY29udGVudCB7XHJcbiAgJjo6cGFydChzY3JvbGwpIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIH1cclxufVxyXG4iXX0= */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsaXN0LXNlbGVjdC5jb21wb25lbnQuc2NzcyJ9 */\";","export default \"ion-range {\\n  flex: 1;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImV4ZXJjaXNlLXNldHRpbmdzLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLE9BQUE7QUFDRiIsImZpbGUiOiJleGVyY2lzZS1zZXR0aW5ncy5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpb24tcmFuZ2Uge1xyXG4gIGZsZXg6IDE7XHJcbn1cclxuIl19 */\";","export default \".exercise {\\n  /**\\n  * CSS here is complicated due to the fact that we want to animate --right, --wrong and --highlighted out,\\n  * But the button can be both --highlighted and --right at the same time,\\n  * and we need to avoid overriding the transition property incorrectly\\n  */\\n}\\n.exercise__content-container {\\n  height: 100%;\\n  display: flex;\\n  flex-direction: column;\\n}\\n.exercise__answers-container {\\n  min-height: 160px;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n}\\n.exercise__answers-row {\\n  display: flex;\\n}\\n.exercise__answers-row > * {\\n  min-width: 0;\\n  flex: 1;\\n}\\n.exercise__answer-button::part(native) {\\n  border: 0 solid rgba(0, 0, 0, 0);\\n}\\n.exercise__answer-button.--right::part(native) {\\n  background-color: var(--ion-color-success);\\n}\\n.exercise__answer-button:not(.--right):not(.--wrong).--highlighted::part(native) {\\n  transition: background-color 700ms ease-in;\\n}\\n.exercise__answer-button:not(.--right):not(.--wrong):not(.--highlighted)::part(native) {\\n  transition: background-color 700ms ease-in, border-color 300ms ease-in-out, border-width 300ms ease-in-out;\\n}\\n.exercise__answer-button:not(.--highlighted).--right::part(native), .exercise__answer-button:not(.--highlighted).--wrong::part(native) {\\n  transition: border-color 300ms ease-in;\\n}\\n.exercise__answer-button:not(.--highlighted):not(.--right):not(.--wrong)::part(native) {\\n  transition: background-color 700ms ease-in, border-color 300ms ease-in-out, border-width 300ms ease-in-out;\\n}\\n.exercise__answer-button.--wrong::part(native) {\\n  background-color: var(--ion-color-danger);\\n}\\n.exercise__answer-button.--highlighted::part(native) {\\n  border-color: rgba(0, 0, 0, 0.2);\\n  border-width: 4px;\\n  transition: border-color 10ms ease-in-out, border-width 10ms ease-in-out;\\n}\\n.exercise__answers-rows-container, .exercise__answers-buttons-auto-layout-container {\\n  flex-grow: 1;\\n}\\n.exercise__answers-buttons-auto-layout-container {\\n  display: flex;\\n  flex-wrap: wrap;\\n  align-content: flex-start;\\n}\\n.exercise__answers-buttons-auto-layout-container ion-button {\\n  flex: 1;\\n}\\n.exercise__actions-container {\\n  display: flex;\\n  min-height: 80px;\\n}\\n.exercise__actions-container ion-button {\\n  flex-grow: 1;\\n}\\nion-title {\\n  padding: 0;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImV4ZXJjaXNlLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQTtFQXVCRTs7OztHQUFBO0FBbkJGO0FBSEU7RUFDRSxZQUFBO0VBQ0EsYUFBQTtFQUNBLHNCQUFBO0FBS0o7QUFGRTtFQUNFLGlCQUFBO0VBQ0EsYUFBQTtFQUNBLG1CQUFBO0VBQ0EsdUJBQUE7QUFJSjtBQURFO0VBQ0UsYUFBQTtBQUdKO0FBREk7RUFDRSxZQUFBO0VBQ0EsT0FBQTtBQUdOO0FBT0k7RUFDRSxnQ0FBQTtBQUxOO0FBU007RUFDRSwwQ0FBQTtBQVBSO0FBYVE7RUFDRSwwQ0FBQTtBQVhWO0FBZ0JRO0VBQ0UsMEdBQUE7QUFkVjtBQXNCUTtFQUNFLHNDQUFBO0FBcEJWO0FBeUJRO0VBQ0UsMEdBQUE7QUF2QlY7QUE2Qk07RUFDRSx5Q0FBQTtBQTNCUjtBQWdDTTtFQUNFLGdDQUFBO0VBQ0EsaUJBQUE7RUFDQSx3RUFBQTtBQTlCUjtBQW1DRTtFQUVFLFlBQUE7QUFsQ0o7QUFxQ0U7RUFDRSxhQUFBO0VBQ0EsZUFBQTtFQUNBLHlCQUFBO0FBbkNKO0FBcUNJO0VBQ0UsT0FBQTtBQW5DTjtBQXVDRTtFQUNFLGFBQUE7RUFDQSxnQkFBQTtBQXJDSjtBQXVDSTtFQUNFLFlBQUE7QUFyQ047QUEwQ0E7RUFDRSxVQUFBO0FBdkNGIiwiZmlsZSI6ImV4ZXJjaXNlLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgJ21haW4nO1xyXG5cclxuLmV4ZXJjaXNlIHtcclxuICAmX19jb250ZW50LWNvbnRhaW5lciB7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICB9XHJcblxyXG4gICZfX2Fuc3dlcnMtY29udGFpbmVyIHtcclxuICAgIG1pbi1oZWlnaHQ6IDIwICogJHVuaXQ7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIH1cclxuXHJcbiAgJl9fYW5zd2Vycy1yb3cge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuXHJcbiAgICA+ICoge1xyXG4gICAgICBtaW4td2lkdGg6IDA7XHJcbiAgICAgIGZsZXg6IDE7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAqIENTUyBoZXJlIGlzIGNvbXBsaWNhdGVkIGR1ZSB0byB0aGUgZmFjdCB0aGF0IHdlIHdhbnQgdG8gYW5pbWF0ZSAtLXJpZ2h0LCAtLXdyb25nIGFuZCAtLWhpZ2hsaWdodGVkIG91dCxcclxuICAqIEJ1dCB0aGUgYnV0dG9uIGNhbiBiZSBib3RoIC0taGlnaGxpZ2h0ZWQgYW5kIC0tcmlnaHQgYXQgdGhlIHNhbWUgdGltZSxcclxuICAqIGFuZCB3ZSBuZWVkIHRvIGF2b2lkIG92ZXJyaWRpbmcgdGhlIHRyYW5zaXRpb24gcHJvcGVydHkgaW5jb3JyZWN0bHlcclxuICAqL1xyXG4gICZfX2Fuc3dlci1idXR0b24ge1xyXG4gICAgJjo6cGFydChuYXRpdmUpIHtcclxuICAgICAgYm9yZGVyOiAwIHNvbGlkIHJnYmEoMCwwLDAsIDApO1xyXG4gICAgfVxyXG5cclxuICAgICYuLS1yaWdodCB7XHJcbiAgICAgICY6OnBhcnQobmF0aXZlKSB7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI3t2YXIoLS1pb24tY29sb3Itc3VjY2Vzcyl9O1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgJjpub3QoLi0tcmlnaHQpOm5vdCguLS13cm9uZykge1xyXG4gICAgICAmLi0taGlnaGxpZ2h0ZWQge1xyXG4gICAgICAgICY6OnBhcnQobmF0aXZlKSB7XHJcbiAgICAgICAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDcwMG1zIGVhc2UtaW47XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcblxyXG4gICAgICAmOm5vdCguLS1oaWdobGlnaHRlZCkge1xyXG4gICAgICAgICY6OnBhcnQobmF0aXZlKSB7XHJcbiAgICAgICAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDcwMG1zIGVhc2UtaW4sIGJvcmRlci1jb2xvciAzMDBtcyBlYXNlLWluLW91dCwgYm9yZGVyLXdpZHRoIDMwMG1zIGVhc2UtaW4tb3V0O1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICY6bm90KC4tLWhpZ2hsaWdodGVkKSB7XHJcbiAgICAgICYuLS1yaWdodCxcclxuICAgICAgJi4tLXdyb25nIHtcclxuICAgICAgICAmOjpwYXJ0KG5hdGl2ZSkge1xyXG4gICAgICAgICAgdHJhbnNpdGlvbjogYm9yZGVyLWNvbG9yIDMwMG1zIGVhc2UtaW47XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcblxyXG4gICAgICAmOm5vdCguLS1yaWdodCk6bm90KC4tLXdyb25nKSB7XHJcbiAgICAgICAgJjo6cGFydChuYXRpdmUpIHtcclxuICAgICAgICAgIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgNzAwbXMgZWFzZS1pbiwgYm9yZGVyLWNvbG9yIDMwMG1zIGVhc2UtaW4tb3V0LCBib3JkZXItd2lkdGggMzAwbXMgZWFzZS1pbi1vdXQ7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgJi4tLXdyb25nIHtcclxuICAgICAgJjo6cGFydChuYXRpdmUpIHtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAje3ZhcigtLWlvbi1jb2xvci1kYW5nZXIpfTtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICYuLS1oaWdobGlnaHRlZCB7XHJcbiAgICAgICY6OnBhcnQobmF0aXZlKSB7XHJcbiAgICAgICAgYm9yZGVyLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuMik7XHJcbiAgICAgICAgYm9yZGVyLXdpZHRoOiA0cHg7XHJcbiAgICAgICAgdHJhbnNpdGlvbjogYm9yZGVyLWNvbG9yIDEwbXMgZWFzZS1pbi1vdXQsIGJvcmRlci13aWR0aCAxMG1zIGVhc2UtaW4tb3V0O1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAmX19hbnN3ZXJzLXJvd3MtY29udGFpbmVyLFxyXG4gICZfX2Fuc3dlcnMtYnV0dG9ucy1hdXRvLWxheW91dC1jb250YWluZXIge1xyXG4gICAgZmxleC1ncm93OiAxO1xyXG4gIH1cclxuXHJcbiAgJl9fYW5zd2Vycy1idXR0b25zLWF1dG8tbGF5b3V0LWNvbnRhaW5lciB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC13cmFwOiB3cmFwO1xyXG4gICAgYWxpZ24tY29udGVudDogZmxleC1zdGFydDtcclxuXHJcbiAgICBpb24tYnV0dG9uIHtcclxuICAgICAgZmxleDogMTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gICZfX2FjdGlvbnMtY29udGFpbmVyIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBtaW4taGVpZ2h0OiAgMTAgKiAkdW5pdDtcclxuXHJcbiAgICBpb24tYnV0dG9uIHtcclxuICAgICAgZmxleC1ncm93OiAxO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuaW9uLXRpdGxlIHtcclxuICBwYWRkaW5nOiAwO1xyXG59XHJcbiJdfQ== */\";","export default \"<span\\r\\n  *ngIf=\\\"answer\\\"\\r\\n  class=\\\"answer\\\"\\r\\n>\\r\\n  {{answer}}\\r\\n</span>\\r\\n<span\\r\\n  *ngIf=\\\"!answer\\\"\\r\\n  class=\\\"no-answer\\\"\\r\\n>\\r\\n  ?\\r\\n</span>\\r\\n\";","export default \"<app-modal-frame\\r\\n  [title]=\\\"exerciseName\\\"\\r\\n  #modal=\\\"modal\\\"\\r\\n>\\r\\n  <div\\r\\n    class=\\\"exercise-explanation__content\\\"\\r\\n  >\\r\\n    <ng-template [exerciseExplanationContent]=\\\"content\\\"></ng-template>\\r\\n  </div>\\r\\n\\r\\n  <ion-button expand=\\\"block\\\" (click)=\\\"modal.close()\\\">Got It!</ion-button>\\r\\n</app-modal-frame>\\r\\n\";","export default \"<ion-list *ngIf=\\\"modelValue$ | async as modelValue\\\">\\r\\n  <ion-list-header>\\r\\n    {{label}}\\r\\n  </ion-list-header>\\r\\n  <ion-item *ngFor=\\\"let answer of allAvailableOptions\\\">\\r\\n    <ion-label>{{answer.label}}</ion-label>\\r\\n    <ion-checkbox\\r\\n      (ionChange)=\\\"onChange(answer.value, $event.detail.checked)\\\"\\r\\n      [checked]=\\\"modelValue.includes(answer.value)\\\"\\r\\n      slot=\\\"start\\\"\\r\\n    ></ion-checkbox>\\r\\n  </ion-item>\\r\\n</ion-list>\\r\\n\";","export default \"<app-modal-frame\\r\\n  title=\\\"{{exerciseName}} Settings\\\"\\r\\n  [padding]=\\\"false\\\"\\r\\n  [onClose]=\\\"onClose.bind(this)\\\"\\r\\n>\\r\\n  <ion-list>\\r\\n    <ion-item>\\r\\n      <ion-label>Play Cadence</ion-label>\\r\\n      <ion-select\\r\\n        [formControl]=\\\"generalFormGroup.controls.playCadenceOptions\\\"\\r\\n        [interface]=\\\"'popover'\\\"\\r\\n      >\\r\\n        <ion-select-option [value]=\\\"'ALWAYS'\\\">Always</ion-select-option>\\r\\n        <!--TODO(OE-13)-->\\r\\n        <!--<ion-select-option value=\\\"'EVERY'\\\">Every...</ion-select-option>-->\\r\\n        <!--TODO(OE-12)-->\\r\\n        <!--<ion-select-option [value]=\\\"'EVERY_NEW_KEY'\\\">Once for a new key</ion-select-option>-->\\r\\n        <ion-select-option [value]=\\\"'NEVER'\\\">Never</ion-select-option>\\r\\n        <ion-select-option [value]=\\\"'ONLY_ON_REPEAT'\\\">Only on repeat</ion-select-option>\\r\\n      </ion-select>\\r\\n    </ion-item>\\r\\n    <ion-item>\\r\\n      <ion-label>Move to next question automatically</ion-label>\\r\\n      <ion-toggle\\r\\n        [formControl]=\\\"generalFormGroup.controls.moveToNextQuestionAutomatically\\\"\\r\\n      >\\r\\n      </ion-toggle>\\r\\n    </ion-item>\\r\\n    <ion-item\\r\\n      class=\\\"exercise-settings__item --label-above\\\"\\r\\n    >\\r\\n      <ion-label>BPM</ion-label>\\r\\n      <ion-range\\r\\n        [formControl]=\\\"generalFormGroup.controls.bpm\\\"\\r\\n        [max]=\\\"200\\\"\\r\\n        [min]=\\\"40\\\"\\r\\n        [snaps]=\\\"true\\\"\\r\\n        [step]=\\\"1\\\"\\r\\n        pin\\r\\n      >\\r\\n      </ion-range>\\r\\n    </ion-item>\\r\\n    <ion-item>\\r\\n      <ion-label>Adaptive</ion-label>\\r\\n      <ion-toggle\\r\\n        [formControl]=\\\"generalFormGroup.controls.adaptive\\\"\\r\\n        slot=\\\"end\\\"\\r\\n      ></ion-toggle>\\r\\n    </ion-item>\\r\\n  </ion-list>\\r\\n\\r\\n  <ion-list *ngIf=\\\"exerciseFormGroup\\\">\\r\\n    <ng-container *ngFor=\\\"let exerciseControlSettings of exerciseSettingsDescriptor\\\">\\r\\n      <ng-container\\r\\n        *ngIf=\\\"isShowExerciseControl(exerciseControlSettings)\\\"\\r\\n        [ngSwitch]=\\\"exerciseControlSettings.descriptor.controlType\\\"\\r\\n      >\\r\\n        <ion-item\\r\\n          *ngSwitchCase=\\\"'SELECT'\\\"\\r\\n          @collapseVertical\\r\\n        >\\r\\n          <ion-label>{{exerciseControlSettings.descriptor.label}}</ion-label>\\r\\n          <ion-select\\r\\n            [formControl]=\\\"exerciseFormGroup.controls[exerciseControlSettings.key]\\\"\\r\\n            [interface]=\\\"'popover'\\\"\\r\\n          >\\r\\n            <ion-select-option\\r\\n              *ngFor=\\\"let option of exerciseControlSettings.descriptor.options\\\"\\r\\n              [value]=\\\"option.value\\\"\\r\\n            >\\r\\n              {{option.label}}\\r\\n            </ion-select-option>\\r\\n          </ion-select>\\r\\n        </ion-item>\\r\\n        <ion-item\\r\\n          *ngSwitchCase=\\\"'SLIDER'\\\"\\r\\n          class=\\\"exercise-settings__item --label-above\\\"\\r\\n          @collapseVertical\\r\\n        >\\r\\n          <ion-label>{{exerciseControlSettings.descriptor.label}}</ion-label>\\r\\n          <ion-range\\r\\n            [formControl]=\\\"exerciseFormGroup.controls[exerciseControlSettings.key]\\\"\\r\\n            [max]=\\\"exerciseControlSettings.descriptor.max\\\"\\r\\n            [min]=\\\"exerciseControlSettings.descriptor.min\\\"\\r\\n            [snaps]=\\\"true\\\"\\r\\n            [step]=\\\"exerciseControlSettings.descriptor.step\\\"\\r\\n            pin\\r\\n          >\\r\\n          </ion-range>\\r\\n        </ion-item>\\r\\n        <app-list-select\\r\\n          *ngSwitchCase=\\\"'LIST_SELECT'\\\"\\r\\n          [allAvailableOptions]=\\\"exerciseControlSettings.descriptor.allOptions\\\"\\r\\n          [formControl]=\\\"exerciseFormGroup.controls[exerciseControlSettings.key]\\\"\\r\\n          [label]=\\\"exerciseControlSettings.descriptor.label\\\"\\r\\n          @collapseVertical\\r\\n        ></app-list-select>\\r\\n        <ion-item\\r\\n          *ngSwitchCase=\\\"'CHECKBOX'\\\"\\r\\n          @collapseVertical\\r\\n        >\\r\\n          <ion-label>{{exerciseControlSettings.descriptor.label}}</ion-label>\\r\\n          <ion-toggle\\r\\n            [formControl]=\\\"exerciseFormGroup.controls[exerciseControlSettings.key]\\\"\\r\\n            slot=\\\"end\\\"\\r\\n          ></ion-toggle>\\r\\n        </ion-item>\\r\\n      </ng-container>\\r\\n    </ng-container>\\r\\n  </ion-list>\\r\\n</app-modal-frame>\\r\\n\";","export default \"<ion-header [translucent]=\\\"true\\\">\\r\\n  <ion-toolbar [color]=\\\"'primary'\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button></ion-back-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>\\r\\n      {{state.name}}\\r\\n    </ion-title>\\r\\n    <ion-buttons slot=\\\"end\\\">\\r\\n      <ion-button\\r\\n        *ngIf=\\\"state.exercise.explanation\\\"\\r\\n        (click)=\\\"exerciseExplanation.openExplanation()\\\"\\r\\n      >\\r\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"help-outline\\\"></ion-icon>\\r\\n      </ion-button>\\r\\n      <ion-button (click)=\\\"editSettings()\\\">\\r\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"settings-outline\\\"></ion-icon>\\r\\n      </ion-button>\\r\\n    </ion-buttons>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content [fullscreen]=\\\"true\\\" [padding]=\\\"true\\\">\\r\\n  <div class=\\\"exercise__content-container\\\">\\r\\n    <p class=\\\"exercise__stats-container\\\">\\r\\n      Correct answers: {{state.totalCorrectAnswers}}/{{state.totalQuestions}}\\r\\n      ({{correctAnswersPercentage | number: '1.0-2'}}%)\\r\\n    </p>\\r\\n    <div class=\\\"exercise__answers-container\\\">\\r\\n      <app-answer-indication\\r\\n        *ngFor=\\\"let answer of state.currentAnswers; let i = index\\\"\\r\\n        [answer]=\\\"answer.answer\\\"\\r\\n        [isFocused]=\\\"state.currentlyPlayingSegment === i\\\"\\r\\n        [wasAnsweredWrong]=\\\"answer.wasWrong\\\"\\r\\n      ></app-answer-indication>\\r\\n    </div>\\r\\n    <div\\r\\n      *ngIf=\\\"!isAutoLayout\\\"\\r\\n      class=\\\"exercise__answers-rows-container\\\"\\r\\n    >\\r\\n      <div\\r\\n        *ngFor=\\\"let row of state.answerList.rows\\\"\\r\\n        class=\\\"exercise__answers-row\\\"\\r\\n      >\\r\\n        <ng-container\\r\\n          *ngFor=\\\"let answerCellConfig of row\\\"\\r\\n          [ngTemplateOutlet]=\\\"answerButton\\\"\\r\\n          [ngTemplateOutletContext]=\\\"{$implicit: normalizeAnswerLayoutCellConfig | pureFunction: answerCellConfig}\\\"\\r\\n        ></ng-container>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div\\r\\n      *ngIf=\\\"isAutoLayout\\\"\\r\\n      class=\\\"exercise__answers-buttons-auto-layout-container\\\"\\r\\n    >\\r\\n      <ng-container\\r\\n        *ngFor=\\\"let answer of state.answerList\\\"\\r\\n        [ngTemplateOutlet]=\\\"answerButton\\\"\\r\\n        [ngTemplateOutletContext]=\\\"{$implicit: normalizeAnswerLayoutCellConfig | pureFunction: answer}\\\"\\r\\n      ></ng-container>\\r\\n    </div>\\r\\n    <ng-template\\r\\n      let-answerLayoutCellConfig\\r\\n      #answerButton\\r\\n    >\\r\\n      <ion-button\\r\\n        *ngIf=\\\"answerLayoutCellConfig.answer as answer\\\"\\r\\n        (click)=\\\"onAnswer(answer)\\\"\\r\\n        [class.--right]=\\\"answer === rightAnswer\\\"\\r\\n        [class.--highlighted]=\\\"answer === state.highlightedAnswer\\\"\\r\\n        [class.--wrong]=\\\"wrongAnswers.includes(answer)\\\"\\r\\n        [color]=\\\"'light'\\\"\\r\\n        [style.flex]=\\\"answerLayoutCellConfig.space\\\"\\r\\n        class=\\\"exercise__answer-button\\\"\\r\\n      >\\r\\n        {{answer}}\\r\\n      </ion-button>\\r\\n      <div\\r\\n        *ngIf=\\\"!answerLayoutCellConfig.answer\\\"\\r\\n        [style.flex]=\\\"answerLayoutCellConfig.space\\\"\\r\\n      ></div>\\r\\n    </ng-template>\\r\\n    <div class=\\\"exercise__actions-container\\\">\\r\\n      <ion-button\\r\\n        (click)=\\\"state.playCurrentCadenceAndQuestion()\\\"\\r\\n      >\\r\\n        <ion-icon name=\\\"repeat\\\"></ion-icon>\\r\\n        Repeat\\r\\n      </ion-button>\\r\\n      <ion-button\\r\\n        *ngIf=\\\"state.hasCadence\\\"\\r\\n        (click)=\\\"state.playCurrentQuestion()\\\"\\r\\n      >\\r\\n        <ion-icon name=\\\"musical-note\\\"></ion-icon>\\r\\n      </ion-button>\\r\\n      <ion-button\\r\\n        [disabled]=\\\"!isQuestionCompleted\\\"\\r\\n        (click)=\\\"state.nextQuestion()\\\"\\r\\n      >\\r\\n        Next\\r\\n      </ion-button>\\r\\n    </div>\\r\\n  </div>\\r\\n</ion-content>\\r\\n\";"],"sourceRoot":"webpack:///"}